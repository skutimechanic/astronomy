openapi: 3.0.3
info:
  title: Arcsecond.io OpenAPI
  version: v1
  contact:
    email: team@arcsecond.io
servers:
  - url: https://api.arcsecond.io
paths:
  /{organisation}/activities/:
    get:
      operationId: organisation_activities_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityList'
          description: ''
    post:
      operationId: organisation_activities_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /{organisation}/activities{format}:
    get:
      operationId: organisation_activities_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityList'
          description: ''
    post:
      operationId: organisation_activities_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /{organisation}/activities/{id}/:
    get:
      operationId: organisation_activities_detail_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    put:
      operationId: activities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    patch:
      operationId: activities_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    delete:
      operationId: activities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/activities/{id}{format}:
    get:
      operationId: organisation_activities_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    put:
      operationId: activities_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    patch:
      operationId: activities_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    delete:
      operationId: activities_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/calibrations/:
    get:
      operationId: organisation_calibrations_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationCalibration'
          description: ''
  /{organisation}/calibrations{format}:
    get:
      operationId: organisation_calibrations_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationCalibration'
          description: ''
  /{organisation}/calibrations/{uuid}/:
    get:
      operationId: organisation_calibrations_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCalibration'
          description: ''
  /{organisation}/calibrations/{uuid}{format}:
    get:
      operationId: organisation_calibrations_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCalibration'
          description: ''
  /{organisation}/datafiles/:
    get:
      operationId: organisation_datafiles_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationDataFileList'
          description: ''
    post:
      operationId: organisation_datafiles_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
  /{organisation}/datafiles{format}:
    get:
      operationId: organisation_datafiles_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationDataFileList'
          description: ''
    post:
      operationId: organisation_datafiles_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
  /{organisation}/datafolders/:
    get:
      operationId: organisation_datafilefolders_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datafolders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /{organisation}/datafolders{format}:
    get:
      operationId: organisation_datafilefolders_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datafolders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /{organisation}/datapackages/:
    get:
      operationId: organisation_datapackages_retrieve
      description: |-
        The list of data packages of an organisation.

        If not authenticated, or not a member of the organisation, only the list of
        public packages will be returned. Otherwise, all datasets of the organisation
        is returned.
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationDataPackageList'
          description: ''
    post:
      operationId: organisation_datapackages_create
      description: |-
        The list of data packages of an organisation.

        If not authenticated, or not a member of the organisation, only the list of
        public packages will be returned. Otherwise, all datasets of the organisation
        is returned.
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
  /{organisation}/datapackages{format}:
    get:
      operationId: organisation_datapackages_retrieve_2
      description: |-
        The list of data packages of an organisation.

        If not authenticated, or not a member of the organisation, only the list of
        public packages will be returned. Otherwise, all datasets of the organisation
        is returned.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationDataPackageList'
          description: ''
    post:
      operationId: organisation_datapackages_create_2
      description: |-
        The list of data packages of an organisation.

        If not authenticated, or not a member of the organisation, only the list of
        public packages will be returned. Otherwise, all datasets of the organisation
        is returned.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
  /{organisation}/datapackages/{uuid}/:
    get:
      operationId: organisation_datapackages_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    post:
      operationId: organisation_datapackages_detail_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    put:
      operationId: organisation_datapackages_detail_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    patch:
      operationId: organisation_datapackages_detail_partial_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    delete:
      operationId: organisation_datapackages_detail_destroy
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/datapackages/{uuid}{format}:
    get:
      operationId: organisation_datapackages_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    post:
      operationId: organisation_datapackages_detail_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    put:
      operationId: organisation_datapackages_detail_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataPackage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    patch:
      operationId: organisation_datapackages_detail_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataPackage'
          description: ''
    delete:
      operationId: organisation_datapackages_detail_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/datasetcounts/:
    get:
      operationId: datasetcounts_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datasetcounts
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetCount'
          description: ''
  /{organisation}/datasetcounts{format}:
    get:
      operationId: datasetcounts_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datasetcounts
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetCount'
          description: ''
  /{organisation}/datasets/:
    get:
      operationId: organisation_datasets_retrieve
      description: |-
        The list of datasets of an organisation.
        If not authenticated, or not a member of the organisation, only the list of
        public datasets will be returned. Otherwise, all datasets of the organisation
        is returned.
        The list can be filtered with two parameters: 'date' and 'program' identifier
        (in the case the datasets are associated with observation programs – like
        in large observatories).
        As for the date, it can be provided in various reasonable formats a standard
        parser can understand. The simplest example is: ?date=2018-01-30
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    post:
      operationId: organisation_datasets_create
      description: |-
        The list of datasets of an organisation.
        If not authenticated, or not a member of the organisation, only the list of
        public datasets will be returned. Otherwise, all datasets of the organisation
        is returned.
        The list can be filtered with two parameters: 'date' and 'program' identifier
        (in the case the datasets are associated with observation programs – like
        in large observatories).
        As for the date, it can be provided in various reasonable formats a standard
        parser can understand. The simplest example is: ?date=2018-01-30
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
  /{organisation}/datasets{format}:
    get:
      operationId: organisation_datasets_retrieve_2
      description: |-
        The list of datasets of an organisation.
        If not authenticated, or not a member of the organisation, only the list of
        public datasets will be returned. Otherwise, all datasets of the organisation
        is returned.
        The list can be filtered with two parameters: 'date' and 'program' identifier
        (in the case the datasets are associated with observation programs – like
        in large observatories).
        As for the date, it can be provided in various reasonable formats a standard
        parser can understand. The simplest example is: ?date=2018-01-30
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    post:
      operationId: organisation_datasets_create_2
      description: |-
        The list of datasets of an organisation.
        If not authenticated, or not a member of the organisation, only the list of
        public datasets will be returned. Otherwise, all datasets of the organisation
        is returned.
        The list can be filtered with two parameters: 'date' and 'program' identifier
        (in the case the datasets are associated with observation programs – like
        in large observatories).
        As for the date, it can be provided in various reasonable formats a standard
        parser can understand. The simplest example is: ?date=2018-01-30
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
  /{organisation}/datasets/{uuid}/:
    get:
      operationId: organisation_datasets_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    put:
      operationId: organisation_datasets_detail_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    patch:
      operationId: organisation_datasets_detail_partial_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    delete:
      operationId: organisation_datasets_detail_destroy
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/datasets/{uuid}{format}:
    get:
      operationId: organisation_datasets_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    put:
      operationId: organisation_datasets_detail_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataset'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    patch:
      operationId: organisation_datasets_detail_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataset'
          description: ''
    delete:
      operationId: organisation_datasets_detail_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/datasets/{uuid}/datafiles/:
    get:
      operationId: organisation_datafiles_retrieve_3
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationDataFileList'
          description: ''
    post:
      operationId: organisation_datafiles_create_3
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
  /{organisation}/datasets/{uuid}/datafiles{format}:
    get:
      operationId: organisation_datafiles_retrieve_4
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationDataFileList'
          description: ''
    post:
      operationId: organisation_datafiles_create_4
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
  /{organisation}/datasets/{uuid}/datafiles/{name}/:
    get:
      operationId: organisation_datafiles_detail_retrieve
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
    put:
      operationId: datasets_datafiles_update_3
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
    patch:
      operationId: datasets_datafiles_partial_update_3
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
    delete:
      operationId: datasets_datafiles_destroy_3
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/datasets/{uuid}/datafiles/{name}{format}:
    get:
      operationId: organisation_datafiles_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
    put:
      operationId: datasets_datafiles_formatted_update_3
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganisationDataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
    patch:
      operationId: datasets_datafiles_formatted_partial_update_3
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDataFile'
          description: ''
    delete:
      operationId: datasets_datafiles_formatted_destroy_3
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/datastoragepoints/:
    get:
      operationId: datastoragepoints_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datastoragepoints
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDataStoragePoint'
          description: ''
  /{organisation}/datastoragepoints{format}:
    get:
      operationId: datastoragepoints_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - datastoragepoints
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDataStoragePoint'
          description: ''
  /{organisation}/detectors/:
    get:
      operationId: detectors_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationCCD'
          description: ''
  /{organisation}/detectors{format}:
    get:
      operationId: detectors_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationCCD'
          description: ''
  /{organisation}/detectors/{id}/:
    get:
      operationId: detectors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCCD'
          description: ''
    put:
      operationId: detectors_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationCCD'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationCCD'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationCCD'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCCD'
          description: ''
    patch:
      operationId: detectors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationCCD'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationCCD'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationCCD'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCCD'
          description: ''
  /{organisation}/detectors/{id}{format}:
    get:
      operationId: detectors_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCCD'
          description: ''
    put:
      operationId: detectors_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationCCD'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationCCD'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationCCD'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCCD'
          description: ''
    patch:
      operationId: detectors_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - detectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationCCD'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationCCD'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationCCD'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationCCD'
          description: ''
  /{organisation}/events/:
    get:
      operationId: events_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    post:
      operationId: events_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
  /{organisation}/events{format}:
    get:
      operationId: events_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    post:
      operationId: events_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
  /{organisation}/events/{id}/:
    get:
      operationId: events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    put:
      operationId: events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    patch:
      operationId: events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEvent'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    delete:
      operationId: events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/events/{id}{format}:
    get:
      operationId: events_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    put:
      operationId: events_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEvent'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    patch:
      operationId: events_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEvent'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEvent'
          description: ''
    delete:
      operationId: events_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/instruments/:
    get:
      operationId: organisation_instruments_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
  /{organisation}/instruments{format}:
    get:
      operationId: organisation_instruments_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
  /{organisation}/instruments/{uuid}/:
    get:
      operationId: organisation_instruments_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
    put:
      operationId: organisation_instruments_detail_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationInstrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationInstrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationInstrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
    patch:
      operationId: organisation_instruments_detail_partial_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInstrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInstrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInstrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
  /{organisation}/instruments/{uuid}{format}:
    get:
      operationId: organisation_instruments_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
    put:
      operationId: organisation_instruments_detail_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationInstrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationInstrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationInstrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
    patch:
      operationId: organisation_instruments_detail_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInstrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInstrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInstrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInstrument'
          description: ''
  /{organisation}/invitations/:
    get:
      operationId: organisation_invitations_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    post:
      operationId: organisation_invitations_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationCreate'
          description: ''
  /{organisation}/invitations{format}:
    get:
      operationId: organisation_invitations_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    post:
      operationId: organisation_invitations_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationCreate'
          description: ''
  /{organisation}/invitations/{token}/:
    get:
      operationId: organisation_invitations_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    put:
      operationId: organisation_invitations_detail_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    patch:
      operationId: organisation_invitations_detail_partial_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    delete:
      operationId: organisation_invitations_detail_destroy
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /{organisation}/invitations/{token}{format}:
    get:
      operationId: organisation_invitations_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    put:
      operationId: organisation_invitations_detail_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    patch:
      operationId: organisation_invitations_detail_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationInvitationUpdate'
          description: ''
    delete:
      operationId: organisation_invitations_detail_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /{organisation}/members/:
    get:
      operationId: members_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MembershipList'
          description: ''
    post:
      operationId: members_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipCreate'
          description: ''
  /{organisation}/members{format}:
    get:
      operationId: members_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MembershipList'
          description: ''
    post:
      operationId: members_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipCreate'
          description: ''
  /{organisation}/members/{id}/:
    get:
      operationId: members_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
          description: ''
    put:
      operationId: members_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipList'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
          description: ''
    patch:
      operationId: members_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMembershipList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMembershipList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMembershipList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
          description: ''
    delete:
      operationId: members_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/members/{id}{format}:
    get:
      operationId: members_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
          description: ''
    put:
      operationId: members_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipList'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
          description: ''
    patch:
      operationId: members_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMembershipList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMembershipList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMembershipList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
          description: ''
    delete:
      operationId: members_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - members
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/nightlogs/:
    get:
      operationId: organisation_nightlogs_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    post:
      operationId: organisation_nightlogs_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
  /{organisation}/nightlogs{format}:
    get:
      operationId: organisation_nightlogs_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    post:
      operationId: organisation_nightlogs_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
  /{organisation}/nightlogs/{uuid}/:
    get:
      operationId: organisation_nightlogs_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    put:
      operationId: organisation_nightlogs_detail_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    patch:
      operationId: organisation_nightlogs_detail_partial_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationNightLog'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    delete:
      operationId: organisation_nightlogs_detail_destroy
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/nightlogs/{uuid}{format}:
    get:
      operationId: organisation_nightlogs_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    put:
      operationId: organisation_nightlogs_detail_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationNightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    patch:
      operationId: organisation_nightlogs_detail_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationNightLog'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationNightLog'
          description: ''
    delete:
      operationId: organisation_nightlogs_detail_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/observations/:
    get:
      operationId: organisation_observations_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationObservation'
          description: ''
  /{organisation}/observations{format}:
    get:
      operationId: organisation_observations_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationObservation'
          description: ''
  /{organisation}/observations/{uuid}/:
    get:
      operationId: organisation_observations_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationObservation'
          description: ''
  /{organisation}/observations/{uuid}{format}:
    get:
      operationId: organisation_observations_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationObservation'
          description: ''
  /{organisation}/observedtargets/:
    get:
      operationId: organisation_targets_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observedtargets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservedTarget'
          description: ''
  /{organisation}/observedtargets{format}:
    get:
      operationId: organisation_targets_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observedtargets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservedTarget'
          description: ''
  /{organisation}/observingsites/:
    get:
      operationId: organisation_observingsites_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
    post:
      operationId: organisation_observingsites_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
  /{organisation}/observingsites{format}:
    get:
      operationId: organisation_observingsites_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
    post:
      operationId: organisation_observingsites_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
  /{organisation}/observingsites/{uuid}/:
    get:
      operationId: organisation_observingsites_detail_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
    put:
      operationId: organisation_observingsites_detail_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
    patch:
      operationId: organisation_observingsites_detail_partial_update
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteListCreate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
  /{organisation}/observingsites/{uuid}{format}:
    get:
      operationId: organisation_observingsites_detail_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
    put:
      operationId: organisation_observingsites_detail_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
    patch:
      operationId: organisation_observingsites_detail_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteListCreate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
  /{organisation}/periods/:
    get:
      operationId: periods_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - periods
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Period'
          description: ''
    post:
      operationId: periods_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - periods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
  /{organisation}/periods{format}:
    get:
      operationId: periods_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - periods
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Period'
          description: ''
    post:
      operationId: periods_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - periods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Period'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Period'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Period'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Period'
          description: ''
  /{organisation}/reminders/:
    get:
      operationId: reminders_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    post:
      operationId: reminders_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
  /{organisation}/reminders{format}:
    get:
      operationId: reminders_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    post:
      operationId: reminders_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
  /{organisation}/reminders/{id}/:
    get:
      operationId: reminders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    put:
      operationId: reminders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    patch:
      operationId: reminders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEventReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEventReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEventReminder'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    delete:
      operationId: reminders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/reminders/{id}{format}:
    get:
      operationId: reminders_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    put:
      operationId: reminders_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationScheduleEventReminder'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    patch:
      operationId: reminders_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEventReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEventReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationScheduleEventReminder'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationScheduleEventReminder'
          description: ''
    delete:
      operationId: reminders_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - reminders
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/stats/:
    get:
      operationId: organisation_stats_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - stats
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationStats'
          description: ''
  /{organisation}/stats{format}:
    get:
      operationId: organisation_stats_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - stats
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationStats'
          description: ''
  /{organisation}/targetlists/:
    get:
      operationId: targetlists_list_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetList'
          description: ''
    post:
      operationId: targetlists_create_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
  /{organisation}/targetlists{format}:
    get:
      operationId: targetlists_formatted_list_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetList'
          description: ''
    post:
      operationId: targetlists_formatted_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
  /{organisation}/targetlists/{uuid}/:
    get:
      operationId: targetlists_retrieve_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    put:
      operationId: targetlists_update_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    patch:
      operationId: targetlists_partial_update_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    delete:
      operationId: targetlists_destroy_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/targetlists/{uuid}{format}:
    get:
      operationId: targetlists_formatted_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    put:
      operationId: targetlists_formatted_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    patch:
      operationId: targetlists_formatted_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    delete:
      operationId: targetlists_formatted_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/targets/:
    get:
      operationId: targets_list_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Target'
          description: ''
    post:
      operationId: targets_create_2
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
  /{organisation}/targets{format}:
    get:
      operationId: targets_formatted_list_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Target'
          description: ''
    post:
      operationId: targets_formatted_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
  /{organisation}/targets/{id}/:
    get:
      operationId: targets_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    put:
      operationId: targets_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    patch:
      operationId: targets_partial_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    delete:
      operationId: targets_destroy_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/targets/{id}{format}:
    get:
      operationId: targets_formatted_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    put:
      operationId: targets_formatted_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    patch:
      operationId: targets_formatted_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    delete:
      operationId: targets_formatted_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /{organisation}/telescopeactivations/:
    get:
      operationId: telescopeactivations_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
    post:
      operationId: telescopeactivations_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
  /{organisation}/telescopeactivations{format}:
    get:
      operationId: telescopeactivations_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
    post:
      operationId: telescopeactivations_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
  /{organisation}/telescopeactivations/{id}/:
    get:
      operationId: telescopeactivations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
    put:
      operationId: telescopeactivations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
    patch:
      operationId: telescopeactivations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeActivation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeActivation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeActivation'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
  /{organisation}/telescopeactivations/{id}{format}:
    get:
      operationId: telescopeactivations_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
    put:
      operationId: telescopeactivations_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeActivation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
    patch:
      operationId: telescopeactivations_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeactivations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeActivation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeActivation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeActivation'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeActivation'
          description: ''
  /{organisation}/telescopeownerships/:
    get:
      operationId: telescopeownerships_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
    post:
      operationId: telescopeownerships_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
  /{organisation}/telescopeownerships{format}:
    get:
      operationId: telescopeownerships_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
    post:
      operationId: telescopeownerships_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
  /{organisation}/telescopeownerships/{id}/:
    get:
      operationId: telescopeownerships_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
    put:
      operationId: telescopeownerships_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
    patch:
      operationId: telescopeownerships_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeOwnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeOwnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeOwnership'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
  /{organisation}/telescopeownerships/{id}{format}:
    get:
      operationId: telescopeownerships_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
    put:
      operationId: telescopeownerships_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeOwnership'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
    patch:
      operationId: telescopeownerships_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopeownerships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeOwnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeOwnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeOwnership'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeOwnership'
          description: ''
  /{organisation}/telescopes/:
    get:
      operationId: organisation_telescopes_retrieve
      description: |-
        List of all telescopes owned by an organisation.

        It returns only the telescopes of that organisation.
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeListRetrieve'
          description: ''
    post:
      operationId: organisation_telescopes_create
      description: |-
        List of all telescopes owned by an organisation.

        It returns only the telescopes of that organisation.
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          description: ''
  /{organisation}/telescopes{format}:
    get:
      operationId: organisation_telescopes_retrieve_2
      description: |-
        List of all telescopes owned by an organisation.

        It returns only the telescopes of that organisation.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeListRetrieve'
          description: ''
    post:
      operationId: organisation_telescopes_create_2
      description: |-
        List of all telescopes owned by an organisation.

        It returns only the telescopes of that organisation.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          description: ''
  /{organisation}/telescopes/{uuid_or_alias}/:
    get:
      operationId: organisation_telescopes_detail_retrieve
      description: |-
        Detail of a telescope owned by an organisation.

        It returns only the telescope of that organisation.
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeListRetrieve'
          description: ''
    put:
      operationId: organisation_telescopes_detail_update
      description: |-
        Detail of a telescope owned by an organisation.

        It returns only the telescope of that organisation.
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          description: ''
    patch:
      operationId: organisation_telescopes_detail_partial_update
      description: |-
        Detail of a telescope owned by an organisation.

        It returns only the telescope of that organisation.
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeCreateUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          description: ''
  /{organisation}/telescopes/{uuid_or_alias}{format}:
    get:
      operationId: organisation_telescopes_detail_retrieve_2
      description: |-
        Detail of a telescope owned by an organisation.

        It returns only the telescope of that organisation.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeListRetrieve'
          description: ''
    put:
      operationId: organisation_telescopes_detail_update_2
      description: |-
        Detail of a telescope owned by an organisation.

        It returns only the telescope of that organisation.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          description: ''
    patch:
      operationId: organisation_telescopes_detail_partial_update_2
      description: |-
        Detail of a telescope owned by an organisation.

        It returns only the telescope of that organisation.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationTelescopeCreateUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeCreateUpdate'
          description: ''
  /{organisation}/telescopes/{uuid_or_alias}/images/:
    get:
      operationId: organisation_telescopeimages_retrieve
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeImageList'
          description: ''
    post:
      operationId: organisation_telescopeimages_create
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeImageList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeImageList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeImageList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeImageList'
          description: ''
  /{organisation}/telescopes/{uuid_or_alias}/images{format}:
    get:
      operationId: organisation_telescopeimages_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationTelescopeImageList'
          description: ''
    post:
      operationId: organisation_telescopeimages_create_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeImageList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeImageList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationTelescopeImageList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationTelescopeImageList'
          description: ''
  /{organisation}/uploadkeys/:
    get:
      operationId: uploadkeys_list
      parameters:
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - uploadkeys
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationUploadKey'
          description: ''
  /{organisation}/uploadkeys{format}:
    get:
      operationId: uploadkeys_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: organisation
        schema:
          type: string
        required: true
      tags:
      - uploadkeys
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationUploadKey'
          description: ''
  /activities/:
    get:
      operationId: activities_list
      description: |-
        List of Observing Activities.

        Activities are ordered by inverse creation date. Results are paginated.

        Activities are the records of the observing activities around the world. They
        intend to gather in a single object an observing activity in a given
        observing site, with a given telescope, a given instrument by a given
        observer, or collaboration or organisation.

        They are called Activity rather than Observation, since an Activity can
        encompass more than one formal Observation (see Night Logs for the Observation
        model), and will hold, in the future, other type of activities (mirror
        cleaning, maintenance etc...).
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityList'
          description: ''
    post:
      operationId: activities_create
      description: |-
        List of Observing Activities.

        Activities are ordered by inverse creation date. Results are paginated.

        Activities are the records of the observing activities around the world. They
        intend to gather in a single object an observing activity in a given
        observing site, with a given telescope, a given instrument by a given
        observer, or collaboration or organisation.

        They are called Activity rather than Observation, since an Activity can
        encompass more than one formal Observation (see Night Logs for the Observation
        model), and will hold, in the future, other type of activities (mirror
        cleaning, maintenance etc...).
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /activities{format}:
    get:
      operationId: activities_formatted_list
      description: |-
        List of Observing Activities.

        Activities are ordered by inverse creation date. Results are paginated.

        Activities are the records of the observing activities around the world. They
        intend to gather in a single object an observing activity in a given
        observing site, with a given telescope, a given instrument by a given
        observer, or collaboration or organisation.

        They are called Activity rather than Observation, since an Activity can
        encompass more than one formal Observation (see Night Logs for the Observation
        model), and will hold, in the future, other type of activities (mirror
        cleaning, maintenance etc...).
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityList'
          description: ''
    post:
      operationId: activities_formatted_create
      description: |-
        List of Observing Activities.

        Activities are ordered by inverse creation date. Results are paginated.

        Activities are the records of the observing activities around the world. They
        intend to gather in a single object an observing activity in a given
        observing site, with a given telescope, a given instrument by a given
        observer, or collaboration or organisation.

        They are called Activity rather than Observation, since an Activity can
        encompass more than one formal Observation (see Night Logs for the Observation
        model), and will hold, in the future, other type of activities (mirror
        cleaning, maintenance etc...).
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /activities/{id}/:
    get:
      operationId: activities_retrieve
      description: |-
        Detail of an Activity.

        Activities are the records of the observing activities around the world. They
        intend to gather in a single object an observing activity in a given
        observing site, with a given telescope, a given instrument by a given
        observer, or collaboration or organisation.

        They are called Activity rather than Observation, since an Activity can
        encompass more than one formal Observation (see Night Logs for the Observation
        model), and will hold, in the future, other type of activities (mirror
        cleaning, maintenance etc...).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /activities/{id}{format}:
    get:
      operationId: activities_formatted_retrieve
      description: |-
        Detail of an Activity.

        Activities are the records of the observing activities around the world. They
        intend to gather in a single object an observing activity in a given
        observing site, with a given telescope, a given instrument by a given
        observer, or collaboration or organisation.

        They are called Activity rather than Observation, since an Activity can
        encompass more than one formal Observation (see Night Logs for the Observation
        model), and will hold, in the future, other type of activities (mirror
        cleaning, maintenance etc...).
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - activities
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /archives/:
    get:
      operationId: archives_list
      description: |-
        List of Data Archives currently parsed by Arcsecond.io.

        Archives are top instances encompassing basic details about an archive.
        See ArchiveDataRows for the real data.
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataArchive'
          description: ''
  /archives{format}:
    get:
      operationId: archives_formatted_list
      description: |-
        List of Data Archives currently parsed by Arcsecond.io.

        Archives are top instances encompassing basic details about an archive.
        See ArchiveDataRows for the real data.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataArchive'
          description: ''
  /archives/{name}/:
    get:
      operationId: archives_retrieve
      description: |-
        Detail of a Data Archive currently parsed by Arcsecond.io.

        Archives are top instances encompassing basic details about an archive.
        See ArchiveDataRows for the real data.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataArchive'
          description: ''
  /archives/{name}{format}:
    get:
      operationId: archives_formatted_retrieve
      description: |-
        Detail of a Data Archive currently parsed by Arcsecond.io.

        Archives are top instances encompassing basic details about an archive.
        See ArchiveDataRows for the real data.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataArchive'
          description: ''
  /archives/ESO/data/:
    get:
      operationId: archives_ESO_data_list
      description: |-
        List of Data Rows from the ESO Data Archive.

        ESO Data Rows are entries inside the ESO Data Archive. They contain as many as metadata
        Arcsecond is able to consistently parse.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedESOArchiveDataRowList'
          description: ''
  /archives/ESO/data{format}:
    get:
      operationId: archives_ESO_data_formatted_list
      description: |-
        List of Data Rows from the ESO Data Archive.

        ESO Data Rows are entries inside the ESO Data Archive. They contain as many as metadata
        Arcsecond is able to consistently parse.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedESOArchiveDataRowList'
          description: ''
  /archives/ESO/programmes/{identifier}/:
    get:
      operationId: archives_ESO_programmes_retrieve
      description: |-
        Detail of a ESO Programme inside the ESO Archive.

        This endpoint provides all the details Arcsecond is able to consistently
        extract from the ESO Archive.
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
        required: true
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ESOProgramme'
          description: ''
  /archives/ESO/programmes/{identifier}{format}:
    get:
      operationId: archives_ESO_programmes_formatted_retrieve
      description: |-
        Detail of a ESO Programme inside the ESO Archive.

        This endpoint provides all the details Arcsecond is able to consistently
        extract from the ESO Archive.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: identifier
        schema:
          type: string
        required: true
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ESOProgramme'
          description: ''
  /archives/Gemini/data/:
    get:
      operationId: archives_Gemini_data_list
      description: |-
        List of Data Rows from the Gemini Data Archive.

        Gemini Data Rows are entries inside the Gemini Data Archive. They contain as many as metadata
        Arcsecond is able to consistently parse.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeminiArchiveDataRowList'
          description: ''
  /archives/Gemini/data{format}:
    get:
      operationId: archives_Gemini_data_formatted_list
      description: |-
        List of Data Rows from the Gemini Data Archive.

        Gemini Data Rows are entries inside the Gemini Data Archive. They contain as many as metadata
        Arcsecond is able to consistently parse.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeminiArchiveDataRowList'
          description: ''
  /archives/Gemini/programmes/{identifier}/:
    get:
      operationId: archives_Gemini_programmes_retrieve
      description: |-
        Detail of a Gemini Programme inside the Gemini Archive.

        This endpoint provides all the details Arcsecond is able to consistently
        extract from the Gemini Archive.
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
        required: true
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeminiProgramme'
          description: ''
  /archives/Gemini/programmes/{identifier}{format}:
    get:
      operationId: archives_Gemini_programmes_formatted_retrieve
      description: |-
        Detail of a Gemini Programme inside the Gemini Archive.

        This endpoint provides all the details Arcsecond is able to consistently
        extract from the Gemini Archive.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: identifier
        schema:
          type: string
        required: true
      tags:
      - archives
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeminiProgramme'
          description: ''
  /auth/emails/:
    get:
      operationId: auth_emails_list
      tags:
      - auth
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailAddress'
          description: ''
    post:
      operationId: auth_emails_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAddress'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddress'
          description: ''
  /auth/emails/{email}/:
    get:
      operationId: auth_emails_retrieve
      parameters:
      - in: path
        name: email
        schema:
          type: string
        required: true
      tags:
      - auth
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddress'
          description: ''
    put:
      operationId: auth_emails_update
      parameters:
      - in: path
        name: email
        schema:
          type: string
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAddress'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddress'
          description: ''
    patch:
      operationId: auth_emails_partial_update
      parameters:
      - in: path
        name: email
        schema:
          type: string
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmailAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmailAddress'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddress'
          description: ''
    delete:
      operationId: auth_emails_destroy
      parameters:
      - in: path
        name: email
        schema:
          type: string
        required: true
      tags:
      - auth
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /auth/emails/verify/:
    post:
      operationId: auth_emails_verify_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/emails/verify/send/:
    post:
      operationId: auth_emails_verify_send_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAddress'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddress'
          description: ''
  /auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/registration/:
    post:
      operationId: auth_registration_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /auth/token/:
    post:
      operationId: auth_token_create
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /auth/token/verify/:
    post:
      operationId: auth_token_verify_create
      description: Used to download personal datasets from S3!
      tags:
      - auth
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/token/verify-collaboration/:
    post:
      operationId: auth_token_verify_collaboration_create
      description: Used to download organisation datasets from S3!
      tags:
      - auth
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/token/verify-organisation/:
    post:
      operationId: auth_token_verify_organisation_create
      description: Used to download organisation datasets from S3!
      tags:
      - auth
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /betas/:
    get:
      operationId: betas_list
      tags:
      - betas
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BetaInterest'
          description: ''
    post:
      operationId: betas_create
      tags:
      - betas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BetaInterest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BetaInterest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BetaInterest'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BetaInterest'
          description: ''
  /betas{format}:
    get:
      operationId: betas_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - betas
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BetaInterest'
          description: ''
    post:
      operationId: betas_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - betas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BetaInterest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BetaInterest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BetaInterest'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BetaInterest'
          description: ''
  /calibrations/:
    get:
      operationId: calibrations_list
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calibration'
          description: ''
    post:
      operationId: calibrations_create
      tags:
      - calibrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calibration'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
  /calibrations{format}:
    get:
      operationId: calibrations_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calibration'
          description: ''
    post:
      operationId: calibrations_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - calibrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calibration'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
  /calibrations/{uuid}/:
    get:
      operationId: calibrations_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
    put:
      operationId: calibrations_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calibration'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
    patch:
      operationId: calibrations_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCalibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCalibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCalibration'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
    delete:
      operationId: calibrations_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /calibrations/{uuid}{format}:
    get:
      operationId: calibrations_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
    put:
      operationId: calibrations_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calibration'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
    patch:
      operationId: calibrations_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCalibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCalibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCalibration'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
    delete:
      operationId: calibrations_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - calibrations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /catalogues/:
    get:
      operationId: catalogues_list
      description: |-
        List of Catalogues.

        Catalogues contain Catalogue Tables, which in turn contain Table Rows.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue'
          description: ''
  /catalogues{format}:
    get:
      operationId: catalogues_formatted_list
      description: |-
        List of Catalogues.

        Catalogues contain Catalogue Tables, which in turn contain Table Rows.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue'
          description: ''
  /catalogues/{id}/:
    get:
      operationId: catalogues_retrieve
      description: |-
        Detail of a Catalogue.

        Catalogues contain Catalogue Tables, which in turn contain Table Rows.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /catalogues/{id}{format}:
    get:
      operationId: catalogues_formatted_retrieve
      description: |-
        Detail of a Catalogue.

        Catalogues contain Catalogue Tables, which in turn contain Table Rows.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue'
          description: ''
  /catalogues/{id}/tables/:
    get:
      operationId: catalogues_tables_list
      description: |-
        List of Tables of a given Catalogue.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogueTable'
          description: ''
  /catalogues/{id}/tables{format}:
    get:
      operationId: catalogues_tables_formatted_list
      description: |-
        List of Tables of a given Catalogue.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogueTable'
          description: ''
  /catalogues/{id}/tables/{table_index}/:
    get:
      operationId: catalogues_tables_retrieve
      description: |-
        Detail of a Table for a given Catalogue.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: table_index
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogueTable'
          description: ''
  /catalogues/{id}/tables/{table_index}{format}:
    get:
      operationId: catalogues_tables_formatted_retrieve
      description: |-
        Detail of a Table for a given Catalogue.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: table_index
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogueTable'
          description: ''
  /catalogues/{id}/tables/{table_index}/rows/:
    get:
      operationId: catalogues_tables_rows_list
      description: |-
        List of Rows of a Catalogue Table.

        Rows follow the original order of their original catalogue. Results are paginated.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues

        Each row is related to a Catalogue Table and reference a given
        Standard Star.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: table_index
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCatalogueRowList'
          description: ''
  /catalogues/{id}/tables/{table_index}/rows{format}:
    get:
      operationId: catalogues_tables_rows_formatted_list
      description: |-
        List of Rows of a Catalogue Table.

        Rows follow the original order of their original catalogue. Results are paginated.

        As for now, Catalogues are used for Standard Stars catalogues, which
        have been unified and opened sourced by Arcsecond.io on GitHub:
        https://github.com/arcsecond-io/standard-stars-catalogues

        Each row is related to a Catalogue Table and reference a given
        Standard Star.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: table_index
        schema:
          type: integer
        required: true
      tags:
      - catalogues
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCatalogueRowList'
          description: ''
  /collaborations/:
    get:
      operationId: collaborations_list
      description: |-
        List of Collaborations (for the authenticated user).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollaborationListRetrieve'
          description: ''
    post:
      operationId: collaborations_create
      description: |-
        List of Collaborations (for the authenticated user).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationCreate'
          description: ''
  /collaborations{format}:
    get:
      operationId: collaborations_formatted_list
      description: |-
        List of Collaborations (for the authenticated user).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollaborationListRetrieve'
          description: ''
    post:
      operationId: collaborations_formatted_create
      description: |-
        List of Collaborations (for the authenticated user).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationCreate'
          description: ''
  /collaborations/{id}/:
    get:
      operationId: collaborations_retrieve
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationListRetrieve'
          description: ''
    put:
      operationId: collaborations_update
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationUpdate'
          description: ''
    patch:
      operationId: collaborations_partial_update
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationUpdate'
          description: ''
    delete:
      operationId: collaborations_destroy
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /collaborations/{id}{format}:
    get:
      operationId: collaborations_formatted_retrieve
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationListRetrieve'
          description: ''
    put:
      operationId: collaborations_formatted_update
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationUpdate'
          description: ''
    patch:
      operationId: collaborations_formatted_partial_update
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationUpdate'
          description: ''
    delete:
      operationId: collaborations_formatted_destroy
      description: |-
        Detail of a Collaboration (whose authenticated user is a member).

        Collaborations are workspaces for sharing Datasets, Night Logs and Target Lists.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /collaborations/{id}/invitations/:
    get:
      operationId: collaborations_invitations_list
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    post:
      operationId: collaborations_invitations_create
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationCreate'
          description: ''
  /collaborations/{id}/invitations{format}:
    get:
      operationId: collaborations_invitations_formatted_list
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    post:
      operationId: collaborations_invitations_formatted_create
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collaborations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationCreate'
          description: ''
  /converters/coordinates/fk4/ra/{ra}/dec/{dec}/:
    get:
      operationId: converters_coordinates_fk4_ra_dec_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/fk4/ra/{ra}/dec/{dec}{format}:
    get:
      operationId: converters_coordinates_fk4_ra_dec_formatted_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/fk4noeterms/ra/{ra}/dec/{dec}/:
    get:
      operationId: converters_coordinates_fk4noeterms_ra_dec_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/fk4noeterms/ra/{ra}/dec/{dec}{format}:
    get:
      operationId: converters_coordinates_fk4noeterms_ra_dec_formatted_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/fk5/ra/{ra}/dec/{dec}/:
    get:
      operationId: converters_coordinates_fk5_ra_dec_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/fk5/ra/{ra}/dec/{dec}{format}:
    get:
      operationId: converters_coordinates_fk5_ra_dec_formatted_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/galactic/ra/{ra}/dec/{dec}/:
    get:
      operationId: converters_coordinates_galactic_ra_dec_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/galactic/ra/{ra}/dec/{dec}{format}:
    get:
      operationId: converters_coordinates_galactic_ra_dec_formatted_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/icrs/ra/{ra}/dec/{dec}/:
    get:
      operationId: converters_coordinates_icrs_ra_dec_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/icrs/ra/{ra}/dec/{dec}{format}:
    get:
      operationId: converters_coordinates_icrs_ra_dec_formatted_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/icrs/ra/{ra}/dec/{dec}/distance/{distance}/:
    get:
      operationId: converters_coordinates_icrs_ra_dec_distance_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: distance
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/icrs/ra/{ra}/dec/{dec}/distance/{distance}{format}:
    get:
      operationId: converters_coordinates_icrs_ra_dec_distance_formatted_retrieve
      parameters:
      - in: path
        name: dec
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: distance
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: ra
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/supergalactic/sgl/{sgl}/sgb/{sgb}/:
    get:
      operationId: converters_coordinates_supergalactic_sgl_sgb_retrieve
      parameters:
      - in: path
        name: sgb
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: sgl
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /converters/coordinates/supergalactic/sgl/{sgl}/sgb/{sgb}{format}:
    get:
      operationId: converters_coordinates_supergalactic_sgl_sgb_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: sgb
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      - in: path
        name: sgl
        schema:
          type: string
          pattern: ^[\+\-0-9]+(\.[0-9]+)?$
        required: true
      tags:
      - converters
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /coordinates/{id}/:
    get:
      operationId: coordinates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - coordinates
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinates'
          description: ''
  /coordinates/{id}{format}:
    get:
      operationId: coordinates_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - coordinates
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinates'
          description: ''
  /datafiles/:
    get:
      operationId: datafiles_list
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataFile'
          description: ''
    post:
      operationId: datafiles_create
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      tags:
      - datafiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /datafiles{format}:
    get:
      operationId: datafiles_formatted_list
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataFile'
          description: ''
    post:
      operationId: datafiles_formatted_create
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /datafiles/{name}/:
    get:
      operationId: datafiles_retrieve_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datafiles_update_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datafiles_partial_update_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datafiles_destroy_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datafiles/{name}{format}:
    get:
      operationId: datafiles_formatted_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datafiles_formatted_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datafiles_formatted_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datafiles_formatted_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datafiles/{id}/:
    get:
      operationId: datafiles_retrieve
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datafiles_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datafiles_partial_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datafiles_destroy
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datafiles/{id}{format}:
    get:
      operationId: datafiles_formatted_retrieve
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datafiles_formatted_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datafiles_formatted_partial_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datafiles_formatted_destroy
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - datafiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datapackages/:
    get:
      operationId: datapackages_list
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataPackage'
          description: ''
    post:
      operationId: datapackages_create
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
  /datapackages{format}:
    get:
      operationId: datapackages_formatted_list
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataPackage'
          description: ''
    post:
      operationId: datapackages_formatted_create
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
  /datapackages/{uuid}/:
    get:
      operationId: datapackages_retrieve
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    put:
      operationId: datapackages_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    patch:
      operationId: datapackages_partial_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    delete:
      operationId: datapackages_destroy
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datapackages/{uuid}{format}:
    get:
      operationId: datapackages_formatted_retrieve
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    put:
      operationId: datapackages_formatted_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    patch:
      operationId: datapackages_formatted_partial_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    delete:
      operationId: datapackages_formatted_destroy
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datapackages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datasets/:
    get:
      operationId: datasets_list
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
          description: ''
    post:
      operationId: datasets_create
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /datasets{format}:
    get:
      operationId: datasets_formatted_list
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
          description: ''
    post:
      operationId: datasets_formatted_create
      description: |-
        List of all Datasets owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /datasets/{uuid}/:
    get:
      operationId: datasets_retrieve
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    put:
      operationId: datasets_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: datasets_partial_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    delete:
      operationId: datasets_destroy
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datasets/{uuid}{format}:
    get:
      operationId: datasets_formatted_retrieve
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    put:
      operationId: datasets_formatted_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: datasets_formatted_partial_update
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    delete:
      operationId: datasets_formatted_destroy
      description: |-
        Details of a Dataset owned by the authenticated user.

        Datasets can be possibly associated with a Night Log.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datasets/{uuid}/datafiles/:
    get:
      operationId: datasets_datafiles_list
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataFile'
          description: ''
    post:
      operationId: datasets_datafiles_create
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /datasets/{uuid}/datafiles{format}:
    get:
      operationId: datasets_datafiles_formatted_list
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataFile'
          description: ''
    post:
      operationId: datasets_datafiles_formatted_create
      description: |-
        List of all DataFiles owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
          '*/*':
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /datasets/{uuid}/datafiles/{name}/:
    get:
      operationId: datasets_datafiles_retrieve_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datasets_datafiles_update_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datasets_datafiles_partial_update_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datasets_datafiles_destroy_2
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datasets/{uuid}/datafiles/{name}{format}:
    get:
      operationId: datasets_datafiles_formatted_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datasets_datafiles_formatted_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datasets_datafiles_formatted_partial_update_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datasets_datafiles_formatted_destroy_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datasets/{uuid}/datafiles/{id}/:
    get:
      operationId: datasets_datafiles_retrieve
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datasets_datafiles_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datasets_datafiles_partial_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datasets_datafiles_destroy
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datasets/{uuid}/datafiles/{id}{format}:
    get:
      operationId: datasets_datafiles_formatted_retrieve
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datasets_datafiles_formatted_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datasets_datafiles_formatted_partial_update
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datasets_datafiles_formatted_destroy
      description: |-
        Details of a DataFile owned by the authenticated user.

        DataFiles belong to Datasets.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datasets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datastorages/:
    get:
      operationId: datastorages_list
      tags:
      - datastorages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataStorage'
          description: ''
    post:
      operationId: datastorages_create
      tags:
      - datastorages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
  /datastorages{format}:
    get:
      operationId: datastorages_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datastorages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataStorage'
          description: ''
    post:
      operationId: datastorages_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - datastorages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
  /datastorages/{uuid}/:
    get:
      operationId: datastorages_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
    put:
      operationId: datastorages_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
    patch:
      operationId: datastorages_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataStorage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
    delete:
      operationId: datastorages_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /datastorages/{uuid}{format}:
    get:
      operationId: datastorages_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
    put:
      operationId: datastorages_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
    patch:
      operationId: datastorages_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataStorage'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
    delete:
      operationId: datastorages_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - datastorages
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /exoplanets/:
    get:
      operationId: exoplanets_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - exoplanets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExoplanetList'
          description: ''
  /exoplanets{format}:
    get:
      operationId: exoplanets_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - exoplanets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExoplanetList'
          description: ''
  /exoplanets/{name}/:
    get:
      operationId: exoplanets_retrieve
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - exoplanets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exoplanet'
          description: ''
  /exoplanets/{name}{format}:
    get:
      operationId: exoplanets_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - exoplanets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exoplanet'
          description: ''
  /exoplanets/{name}/coordinates/:
    get:
      operationId: exoplanets_coordinates_retrieve
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - exoplanets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExoplanetCoordinates'
          description: ''
  /exoplanets/{name}/coordinates{format}:
    get:
      operationId: exoplanets_coordinates_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - exoplanets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExoplanetCoordinates'
          description: ''
  /findingcharts/{input}/:
    get:
      operationId: findingcharts_list
      parameters:
      - in: path
        name: input
        schema:
          type: string
          pattern: ^[\s\d\w().+-_',:&]+$
        required: true
      tags:
      - findingcharts
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IPACFindingChart'
          description: ''
  /instruments/:
    get:
      operationId: instruments_list
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrument'
          description: ''
    post:
      operationId: instruments_create
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Instrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Instrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
  /instruments{format}:
    get:
      operationId: instruments_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrument'
          description: ''
    post:
      operationId: instruments_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Instrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Instrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
  /instruments/{uuid}/:
    get:
      operationId: instruments_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
    put:
      operationId: instruments_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Instrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Instrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
    patch:
      operationId: instruments_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInstrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInstrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInstrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
  /instruments/{uuid}{format}:
    get:
      operationId: instruments_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
    put:
      operationId: instruments_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Instrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Instrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
    patch:
      operationId: instruments_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - instruments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInstrument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInstrument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInstrument'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: ''
  /interferometers/:
    get:
      operationId: interferometers_list
      tags:
      - interferometers
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interferometer'
          description: ''
  /interferometers{format}:
    get:
      operationId: interferometers_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - interferometers
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interferometer'
          description: ''
  /interferometers/{uuid}/:
    get:
      operationId: interferometers_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interferometers
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interferometer'
          description: ''
    put:
      operationId: interferometers_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interferometers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interferometer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Interferometer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Interferometer'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interferometer'
          description: ''
    patch:
      operationId: interferometers_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interferometers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterferometer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterferometer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterferometer'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interferometer'
          description: ''
  /interferometers/{uuid}{format}:
    get:
      operationId: interferometers_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interferometers
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interferometer'
          description: ''
    put:
      operationId: interferometers_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interferometers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interferometer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Interferometer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Interferometer'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interferometer'
          description: ''
    patch:
      operationId: interferometers_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interferometers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterferometer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterferometer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterferometer'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interferometer'
          description: ''
  /invitations/:
    get:
      operationId: invitations_list
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    post:
      operationId: invitations_create
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationCreate'
          description: ''
  /invitations{format}:
    get:
      operationId: invitations_formatted_list
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    post:
      operationId: invitations_formatted_create
      description: |-
        List of Invitations of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationCreate'
          description: ''
  /invitations/{token}/:
    get:
      operationId: invitations_retrieve
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    put:
      operationId: invitations_update
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    patch:
      operationId: invitations_partial_update
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    delete:
      operationId: invitations_destroy
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /invitations/{token}{format}:
    get:
      operationId: invitations_formatted_retrieve
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    put:
      operationId: invitations_formatted_update
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollaborationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    patch:
      operationId: invitations_formatted_partial_update
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationInvitationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationInvitationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaborationInvitationUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationInvitationUpdate'
          description: ''
    delete:
      operationId: invitations_formatted_destroy
      description: |-
        Detail of an Invitation of a Collaboration.

        Invitations are sent (and managed) by Collaboration's admin members.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - invitations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /mirrors/:
    get:
      operationId: mirrors_list
      tags:
      - mirrors
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mirror'
          description: ''
  /mirrors{format}:
    get:
      operationId: mirrors_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - mirrors
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mirror'
          description: ''
  /mirrors/{id}/:
    get:
      operationId: mirrors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mirrors
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mirror'
          description: ''
    put:
      operationId: mirrors_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mirrors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mirror'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mirror'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mirror'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mirror'
          description: ''
    patch:
      operationId: mirrors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mirrors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMirror'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMirror'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMirror'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mirror'
          description: ''
  /mirrors/{id}{format}:
    get:
      operationId: mirrors_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mirrors
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mirror'
          description: ''
    put:
      operationId: mirrors_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mirrors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mirror'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mirror'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mirror'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mirror'
          description: ''
    patch:
      operationId: mirrors_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mirrors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMirror'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMirror'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMirror'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mirror'
          description: ''
  /nightlogs/:
    get:
      operationId: nightlogs_list
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NightLog'
          description: ''
    post:
      operationId: nightlogs_create
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
  /nightlogs{format}:
    get:
      operationId: nightlogs_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NightLog'
          description: ''
    post:
      operationId: nightlogs_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
  /nightlogs/{uuid}/:
    get:
      operationId: nightlogs_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
    put:
      operationId: nightlogs_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
    patch:
      operationId: nightlogs_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNightLog'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
    delete:
      operationId: nightlogs_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nightlogs/{uuid}{format}:
    get:
      operationId: nightlogs_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
    put:
      operationId: nightlogs_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
    patch:
      operationId: nightlogs_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNightLog'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
    delete:
      operationId: nightlogs_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nightlogs/{uuid}/calibrations/:
    get:
      operationId: nightlogs_calibrations_list
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calibration'
          description: ''
    post:
      operationId: nightlogs_calibrations_create
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calibration'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
  /nightlogs/{uuid}/calibrations{format}:
    get:
      operationId: nightlogs_calibrations_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calibration'
          description: ''
    post:
      operationId: nightlogs_calibrations_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calibration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calibration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calibration'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calibration'
          description: ''
  /nightlogs/{uuid}/observations/:
    get:
      operationId: nightlogs_observations_list
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
          description: ''
    post:
      operationId: nightlogs_observations_create
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
  /nightlogs/{uuid}/observations{format}:
    get:
      operationId: nightlogs_observations_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
          description: ''
    post:
      operationId: nightlogs_observations_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nightlogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
  /nodes/data-{uuid}/:
    get:
      operationId: nodes_data__list
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_data__create
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_data__destroy
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nodes/data-{uuid}{format}:
    get:
      operationId: nodes_data__formatted_list
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_data__formatted_create_2
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_data__formatted_destroy_2
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nodes/data-{uuid}/{id}/:
    get:
      operationId: nodes_data__retrieve
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_data__create_2
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    put:
      operationId: nodes_data__update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    patch:
      operationId: nodes_data__partial_update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_data__destroy_2
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nodes/data-{uuid}/{id}{format}:
    get:
      operationId: nodes_data__formatted_retrieve
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_data__formatted_create
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    put:
      operationId: nodes_data__formatted_update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    patch:
      operationId: nodes_data__formatted_partial_update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_data__formatted_destroy
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nodes/iobserve/:
    get:
      operationId: nodes_iobserve_list
      description: View used for listing nodes for iobserve
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_iobserve_create
      description: View used for listing nodes for iobserve
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_iobserve_destroy
      description: View used for listing nodes for iobserve
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nodes/iobserve{format}:
    get:
      operationId: nodes_iobserve_formatted_list
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_iobserve_formatted_create_2
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_iobserve_formatted_destroy_2
      description: View used for listing nodes for iobserve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nodes/iobserve/{id}/:
    get:
      operationId: nodes_iobserve_retrieve
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_iobserve_create_2
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    put:
      operationId: nodes_iobserve_update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    patch:
      operationId: nodes_iobserve_partial_update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_iobserve_destroy_2
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /nodes/iobserve/{id}{format}:
    get:
      operationId: nodes_iobserve_formatted_retrieve
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNode'
          description: ''
    post:
      operationId: nodes_iobserve_formatted_create
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    put:
      operationId: nodes_iobserve_formatted_update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    patch:
      operationId: nodes_iobserve_formatted_partial_update
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetTreeNodeWithTree'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetTreeNodeWithTree'
          description: ''
    delete:
      operationId: nodes_iobserve_formatted_destroy
      description: View used for manipulating a node and adding child to a specific
        existing node.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nodes
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /objects/:
    get:
      operationId: objects_list
      tags:
      - objects
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AstronomicalObject'
          description: ''
  /objects{format}:
    get:
      operationId: objects_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - objects
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AstronomicalObject'
          description: ''
  /objects/{name}/:
    get:
      operationId: objects_retrieve
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - objects
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObject'
          description: ''
  /objects/{name}{format}:
    get:
      operationId: objects_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - objects
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObject'
          description: ''
  /objects/{name}/coordinates/:
    get:
      operationId: objects_coordinates_retrieve
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - objects
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalCoordinates'
          description: ''
  /objects/{name}/coordinates{format}:
    get:
      operationId: objects_coordinates_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - objects
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalCoordinates'
          description: ''
  /observations/:
    get:
      operationId: observations_list
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
          description: ''
    post:
      operationId: observations_create
      tags:
      - observations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
  /observations{format}:
    get:
      operationId: observations_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
          description: ''
    post:
      operationId: observations_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - observations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
  /observations/{uuid}/:
    get:
      operationId: observations_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    put:
      operationId: observations_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    patch:
      operationId: observations_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    delete:
      operationId: observations_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /observations/{uuid}{format}:
    get:
      operationId: observations_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    put:
      operationId: observations_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    patch:
      operationId: observations_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    delete:
      operationId: observations_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observations
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /observingruns/:
    get:
      operationId: observingruns_list
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingRun'
          description: ''
    post:
      operationId: observingruns_create
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingRun'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
  /observingruns{format}:
    get:
      operationId: observingruns_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingRun'
          description: ''
    post:
      operationId: observingruns_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingRun'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
  /observingruns/{uuid}/:
    get:
      operationId: observingruns_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
    put:
      operationId: observingruns_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingRun'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
    patch:
      operationId: observingruns_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservingRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservingRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservingRun'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
    delete:
      operationId: observingruns_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /observingruns/{uuid}{format}:
    get:
      operationId: observingruns_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
    put:
      operationId: observingruns_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingRun'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
    patch:
      operationId: observingruns_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservingRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservingRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservingRun'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingRun'
          description: ''
    delete:
      operationId: observingruns_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /observingruns/{uuid}/nightlogs/:
    get:
      operationId: observingruns_nightlogs_list
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NightLog'
          description: ''
    post:
      operationId: observingruns_nightlogs_create
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
  /observingruns/{uuid}/nightlogs{format}:
    get:
      operationId: observingruns_nightlogs_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NightLog'
          description: ''
    post:
      operationId: observingruns_nightlogs_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingruns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NightLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NightLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NightLog'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NightLog'
          description: ''
  /observingsiteimages/:
    get:
      operationId: observingsiteimages_list
      tags:
      - observingsiteimages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
    post:
      operationId: observingsiteimages_create
      tags:
      - observingsiteimages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteImagesList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
  /observingsiteimages{format}:
    get:
      operationId: observingsiteimages_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - observingsiteimages
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
    post:
      operationId: observingsiteimages_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - observingsiteimages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteImagesList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
  /observingsites/:
    get:
      operationId: observingsites_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservingSiteListCreateList'
          description: ''
    post:
      operationId: observingsites_create
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
  /observingsites{format}:
    get:
      operationId: observingsites_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservingSiteListCreateList'
          description: ''
    post:
      operationId: observingsites_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteListCreate'
          description: ''
  /observingsites/{uuid}/:
    get:
      operationId: observingsites_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteUpdate'
          description: ''
    put:
      operationId: observingsites_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteUpdate'
          description: ''
    patch:
      operationId: observingsites_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteUpdate'
          description: ''
  /observingsites/{uuid}{format}:
    get:
      operationId: observingsites_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteUpdate'
          description: ''
    put:
      operationId: observingsites_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservingSiteUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservingSiteUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteUpdate'
          description: ''
    patch:
      operationId: observingsites_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservingSiteUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteUpdate'
          description: ''
  /observingsites/{uuid}/images/:
    get:
      operationId: observingsites_images_list
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
    post:
      operationId: observingsites_images_create
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteImagesList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
  /observingsites/{uuid}/images{format}:
    get:
      operationId: observingsites_images_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
    post:
      operationId: observingsites_images_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservingSiteImagesList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservingSiteImagesList'
          description: ''
  /observingsites/{uuid}/interferometers/:
    get:
      operationId: observingsites_interferometers_list
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interferometer'
          description: ''
  /observingsites/{uuid}/interferometers{format}:
    get:
      operationId: observingsites_interferometers_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interferometer'
          description: ''
  /observingsites/{uuid}/telescopes/:
    get:
      operationId: observingsites_telescopes_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTelescopeListCreateList'
          description: ''
    post:
      operationId: observingsites_telescopes_create
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeListCreate'
          description: ''
  /observingsites/{uuid}/telescopes{format}:
    get:
      operationId: observingsites_telescopes_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTelescopeListCreateList'
          description: ''
    post:
      operationId: observingsites_telescopes_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeListCreate'
          description: ''
  /observingsites/{uuid}/weather/:
    get:
      operationId: observingsites_weather_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherCondition'
          description: ''
  /observingsites/{uuid}/weather{format}:
    get:
      operationId: observingsites_weather_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherCondition'
          description: ''
  /observingsites/updates/:
    get:
      operationId: observingsites_updates_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservingSiteUpdateListList'
          description: ''
  /observingsites/updates{format}:
    get:
      operationId: observingsites_updates_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - observingsites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservingSiteUpdateListList'
          description: ''
  /organisations/:
    get:
      operationId: organisations_list
      description: |-
        The list view of all organisations.
        An organisation can be an institute, an observatory, a university, any type
        of organisation. There are organisations automatically created upon parsing
        of publications. And there are organisations with a dedicated Arcsecond.io
        portal. The latter have a specific 'subdomain' field, which corresponds to
        an Arcsecond address: https://&lt;subdomain&gt;.arcsecond.io.
      tags:
      - organisations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationList'
          description: ''
    post:
      operationId: organisations_create
      description: |-
        The list view of all organisations.
        An organisation can be an institute, an observatory, a university, any type
        of organisation. There are organisations automatically created upon parsing
        of publications. And there are organisations with a dedicated Arcsecond.io
        portal. The latter have a specific 'subdomain' field, which corresponds to
        an Arcsecond address: https://&lt;subdomain&gt;.arcsecond.io.
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationList'
          description: ''
  /organisations{format}:
    get:
      operationId: organisations_formatted_list
      description: |-
        The list view of all organisations.
        An organisation can be an institute, an observatory, a university, any type
        of organisation. There are organisations automatically created upon parsing
        of publications. And there are organisations with a dedicated Arcsecond.io
        portal. The latter have a specific 'subdomain' field, which corresponds to
        an Arcsecond address: https://&lt;subdomain&gt;.arcsecond.io.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - organisations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationList'
          description: ''
    post:
      operationId: organisations_formatted_create
      description: |-
        The list view of all organisations.
        An organisation can be an institute, an observatory, a university, any type
        of organisation. There are organisations automatically created upon parsing
        of publications. And there are organisations with a dedicated Arcsecond.io
        portal. The latter have a specific 'subdomain' field, which corresponds to
        an Arcsecond address: https://&lt;subdomain&gt;.arcsecond.io.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationList'
          description: ''
  /organisations/{subdomain}/:
    get:
      operationId: organisations_retrieve
      description: |-
        The detail view of organisations.
        The details are queried with the subdomain value, hence this view is only
        suited for requesting details of an organisation with an Arcsecond portal
        (and not those organisations appearing in various places, such as publications
        ... until the day they open their portal on Arcsecond).
      parameters:
      - in: path
        name: subdomain
        schema:
          type: string
        required: true
      tags:
      - organisations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetails'
          description: ''
    put:
      operationId: organisations_update
      description: |-
        The detail view of organisations.
        The details are queried with the subdomain value, hence this view is only
        suited for requesting details of an organisation with an Arcsecond portal
        (and not those organisations appearing in various places, such as publications
        ... until the day they open their portal on Arcsecond).
      parameters:
      - in: path
        name: subdomain
        schema:
          type: string
        required: true
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDetails'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetails'
          description: ''
    patch:
      operationId: organisations_partial_update
      description: |-
        The detail view of organisations.
        The details are queried with the subdomain value, hence this view is only
        suited for requesting details of an organisation with an Arcsecond portal
        (and not those organisations appearing in various places, such as publications
        ... until the day they open their portal on Arcsecond).
      parameters:
      - in: path
        name: subdomain
        schema:
          type: string
        required: true
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDetails'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetails'
          description: ''
  /organisations/{subdomain}{format}:
    get:
      operationId: organisations_formatted_retrieve
      description: |-
        The detail view of organisations.
        The details are queried with the subdomain value, hence this view is only
        suited for requesting details of an organisation with an Arcsecond portal
        (and not those organisations appearing in various places, such as publications
        ... until the day they open their portal on Arcsecond).
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: subdomain
        schema:
          type: string
        required: true
      tags:
      - organisations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetails'
          description: ''
    put:
      operationId: organisations_formatted_update
      description: |-
        The detail view of organisations.
        The details are queried with the subdomain value, hence this view is only
        suited for requesting details of an organisation with an Arcsecond portal
        (and not those organisations appearing in various places, such as publications
        ... until the day they open their portal on Arcsecond).
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: subdomain
        schema:
          type: string
        required: true
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganisationDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganisationDetails'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetails'
          description: ''
    patch:
      operationId: organisations_formatted_partial_update
      description: |-
        The detail view of organisations.
        The details are queried with the subdomain value, hence this view is only
        suited for requesting details of an organisation with an Arcsecond portal
        (and not those organisations appearing in various places, such as publications
        ... until the day they open their portal on Arcsecond).
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: subdomain
        schema:
          type: string
        required: true
      tags:
      - organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganisationDetails'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationDetails'
          description: ''
  /people/:
    get:
      operationId: people_list
      tags:
      - people
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
          description: ''
  /people{format}:
    get:
      operationId: people_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - people
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
          description: ''
  /profiles/:
    get:
      operationId: profiles_list
      description: |-
        The list view of user profiles.
        The list is searchable on username, first and last names, case-insensitive,
        using the 'search' query parameter. The result is paginated.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /profiles{format}:
    get:
      operationId: profiles_formatted_list
      description: |-
        The list view of user profiles.
        The list is searchable on username, first and last names, case-insensitive,
        using the 'search' query parameter. The result is paginated.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /profiles/{username}/:
    get:
      operationId: profiles_retrieve
      description: |-
        The detailed view of a user profile.
        If the profile requested is the one of the authenticated user, a complete profile information set is returned.
        Otherwise, only a basic user profile is returned, with username, first and last name, date of registration.
        In particular, the email is *not* disclosed.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: profiles_update
      description: |-
        The detailed view of a user profile.
        If the profile requested is the one of the authenticated user, a complete profile information set is returned.
        Otherwise, only a basic user profile is returned, with username, first and last name, date of registration.
        In particular, the email is *not* disclosed.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: profiles_partial_update
      description: |-
        The detailed view of a user profile.
        If the profile requested is the one of the authenticated user, a complete profile information set is returned.
        Otherwise, only a basic user profile is returned, with username, first and last name, date of registration.
        In particular, the email is *not* disclosed.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /profiles/{username}{format}:
    get:
      operationId: profiles_formatted_retrieve
      description: |-
        The detailed view of a user profile.
        If the profile requested is the one of the authenticated user, a complete profile information set is returned.
        Otherwise, only a basic user profile is returned, with username, first and last name, date of registration.
        In particular, the email is *not* disclosed.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: profiles_formatted_update
      description: |-
        The detailed view of a user profile.
        If the profile requested is the one of the authenticated user, a complete profile information set is returned.
        Otherwise, only a basic user profile is returned, with username, first and last name, date of registration.
        In particular, the email is *not* disclosed.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: profiles_formatted_partial_update
      description: |-
        The detailed view of a user profile.
        If the profile requested is the one of the authenticated user, a complete profile information set is returned.
        Otherwise, only a basic user profile is returned, with username, first and last name, date of registration.
        In particular, the email is *not* disclosed.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /profiles/{username}/apikey/:
    get:
      operationId: profiles_apikey_retrieve
      description: The API key view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAPIKey'
          description: ''
    put:
      operationId: profiles_apikey_update
      description: The API key view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileAPIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileAPIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileAPIKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAPIKey'
          description: ''
    patch:
      operationId: profiles_apikey_partial_update
      description: The API key view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileAPIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileAPIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileAPIKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAPIKey'
          description: ''
  /profiles/{username}/apikey{format}:
    get:
      operationId: profiles_apikey_formatted_retrieve
      description: The API key view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAPIKey'
          description: ''
    put:
      operationId: profiles_apikey_formatted_update
      description: The API key view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileAPIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileAPIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileAPIKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAPIKey'
          description: ''
    patch:
      operationId: profiles_apikey_formatted_partial_update
      description: The API key view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileAPIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileAPIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileAPIKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileAPIKey'
          description: ''
  /profiles/{username}/datastoragepoints/:
    get:
      operationId: profiles_datastoragepoints_list
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDataStoragePoint'
          description: ''
  /profiles/{username}/datastoragepoints{format}:
    get:
      operationId: profiles_datastoragepoints_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDataStoragePoint'
          description: ''
  /profiles/{username}/datastorages/:
    get:
      operationId: profiles_datastorages_list
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataStorage'
          description: ''
    post:
      operationId: profiles_datastorages_create
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
  /profiles/{username}/datastorages{format}:
    get:
      operationId: profiles_datastorages_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataStorage'
          description: ''
    post:
      operationId: profiles_datastorages_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorage'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorage'
          description: ''
  /profiles/{username}/secretkey/:
    post:
      operationId: profiles_secretkey_create
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
  /profiles/{username}/secretkey{format}:
    post:
      operationId: profiles_secretkey_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
  /profiles/{username}/sharedkeys/:
    get:
      operationId: profiles_sharedkeys_list
      description: The upload keys view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          description: ''
    post:
      operationId: profiles_sharedkeys_create
      description: The upload keys view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          description: ''
  /profiles/{username}/sharedkeys{format}:
    get:
      operationId: profiles_sharedkeys_formatted_list
      description: The upload keys view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          description: ''
    post:
      operationId: profiles_sharedkeys_formatted_create
      description: The upload keys view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileOrganisationUploadKey'
          description: ''
  /profiles/{username}/sharedkeys/{id}/:
    delete:
      operationId: profiles_sharedkeys_destroy
      description: The upload keys view of a user profile.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /profiles/{username}/sharedkeys/{id}{format}:
    delete:
      operationId: profiles_sharedkeys_formatted_destroy
      description: The upload keys view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /profiles/{username}/stats/:
    get:
      operationId: profiles_stats_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /profiles/{username}/stats{format}:
    get:
      operationId: profiles_stats_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /profiles/{username}/subscriptions/:
    get:
      operationId: profiles_subscriptions_list
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DJSubscriptions'
          description: ''
  /profiles/{username}/subscriptions{format}:
    get:
      operationId: profiles_subscriptions_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DJSubscriptions'
          description: ''
  /profiles/{username}/subscriptions/{stripe_id}/:
    get:
      operationId: profiles_subscriptions_retrieve
      parameters:
      - in: path
        name: stripe_id
        schema:
          type: string
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJSubscriptions'
          description: ''
    put:
      operationId: profiles_subscriptions_update
      parameters:
      - in: path
        name: stripe_id
        schema:
          type: string
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DJSubscriptions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DJSubscriptions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DJSubscriptions'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJSubscriptions'
          description: ''
    patch:
      operationId: profiles_subscriptions_partial_update
      parameters:
      - in: path
        name: stripe_id
        schema:
          type: string
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDJSubscriptions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDJSubscriptions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDJSubscriptions'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJSubscriptions'
          description: ''
  /profiles/{username}/subscriptions/{stripe_id}{format}:
    get:
      operationId: profiles_subscriptions_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: stripe_id
        schema:
          type: string
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJSubscriptions'
          description: ''
    put:
      operationId: profiles_subscriptions_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: stripe_id
        schema:
          type: string
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DJSubscriptions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DJSubscriptions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DJSubscriptions'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJSubscriptions'
          description: ''
    patch:
      operationId: profiles_subscriptions_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: stripe_id
        schema:
          type: string
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDJSubscriptions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDJSubscriptions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDJSubscriptions'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DJSubscriptions'
          description: ''
  /profiles/{username}/uploadkey/:
    get:
      operationId: profiles_uploadkey_retrieve
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
    post:
      operationId: profiles_uploadkey_create
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
    put:
      operationId: profiles_uploadkey_update
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
    patch:
      operationId: profiles_uploadkey_partial_update
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
  /profiles/{username}/uploadkey{format}:
    get:
      operationId: profiles_uploadkey_formatted_retrieve
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
    post:
      operationId: profiles_uploadkey_formatted_create
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
    put:
      operationId: profiles_uploadkey_formatted_update
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
    patch:
      operationId: profiles_uploadkey_formatted_partial_update
      description: The upload key view of a user profile.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUploadKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUploadKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUploadKey'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUploadKey'
          description: ''
  /programmes/:
    get:
      operationId: programmes_list
      description: |-
        List of Programmes related to Data Rows inside Archives.

        Programmes encompass here those of all Data Archives currently
        parsed by Arcsecond.io (for now, ESO and Gemini).

        This endpoint provide only the data *common* to all Programme models.
        For a complete set of data related to a given programme, read its
        associated detail endpoint.

        This Programmes endpoint can be filtered case-insensitively on the
        `title` and `identifier` fields using a simple "contains" matcher.
      tags:
      - programmes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Programme'
          description: ''
  /programmes{format}:
    get:
      operationId: programmes_formatted_list
      description: |-
        List of Programmes related to Data Rows inside Archives.

        Programmes encompass here those of all Data Archives currently
        parsed by Arcsecond.io (for now, ESO and Gemini).

        This endpoint provide only the data *common* to all Programme models.
        For a complete set of data related to a given programme, read its
        associated detail endpoint.

        This Programmes endpoint can be filtered case-insensitively on the
        `title` and `identifier` fields using a simple "contains" matcher.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - programmes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Programme'
          description: ''
  /publications/:
    get:
      operationId: publications_list
      description: |-
        Lists of Publications. A query param '?object=<object_name>' must be provided.

        Publications are returned by inverse publication date.
        The primary key of a Publication is 'bibcode'. This primary must be used
        to access the details in the details endpoint.

        If you are a registered user, you are requested to provided your own NASA ADS API key.
        This key is to be found in the new NASA ADS page. This is both to help NASA get
        correct statistics, and avoid Arcsecond to reach rate limits.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - publications
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationList'
          description: ''
  /publications{format}:
    get:
      operationId: publications_formatted_list
      description: |-
        Lists of Publications. A query param '?object=<object_name>' must be provided.

        Publications are returned by inverse publication date.
        The primary key of a Publication is 'bibcode'. This primary must be used
        to access the details in the details endpoint.

        If you are a registered user, you are requested to provided your own NASA ADS API key.
        This key is to be found in the new NASA ADS page. This is both to help NASA get
        correct statistics, and avoid Arcsecond to reach rate limits.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - publications
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationList'
          description: ''
  /publications/{bibcode}/:
    get:
      operationId: publications_retrieve
      description: |-
        Details of a Publication.

        All details of a Publications is retrieved from NASA ADS.

        If you are a registered user, you are requested to provided your own NASA ADS API key.
        This key is to be found in the new NASA ADS page. This is both to help NASA get
        correct statistics, and avoid Arcsecond to reach rate limits.
      parameters:
      - in: path
        name: bibcode
        schema:
          type: string
          pattern: ^[0-9]{4}[A-Za-z&0-9\.]{15}$
        required: true
      tags:
      - publications
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationFull'
          description: ''
  /releases/:
    get:
      operationId: releases_list
      description: |-
        List of Releases declared by Arcsecond.io

        Releases contain Release Points explaining the important
        changes made to both api.arcsecond.io and www.arcsecond.io.
        This endpoint is used to make the Changelog page:
        https://www.arcsecond.io/changelog

        Results are ordered by inverse date, and can be limited
        by a parameter `?last=<integer>` (must be strictly positive)
        to return only the latest <last> releases.
      tags:
      - releases
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
          description: ''
  /releases{format}:
    get:
      operationId: releases_formatted_list
      description: |-
        List of Releases declared by Arcsecond.io

        Releases contain Release Points explaining the important
        changes made to both api.arcsecond.io and www.arcsecond.io.
        This endpoint is used to make the Changelog page:
        https://www.arcsecond.io/changelog

        Results are ordered by inverse date, and can be limited
        by a parameter `?last=<integer>` (must be strictly positive)
        to return only the latest <last> releases.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - releases
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
          description: ''
  /satellitecounts/:
    get:
      operationId: satellitecounts_retrieve
      tags:
      - satellitecounts
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /satellitecounts{format}:
    get:
      operationId: satellitecounts_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - satellitecounts
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /satellites/:
    get:
      operationId: satellites_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - satellites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSatelliteList'
          description: ''
  /satellites{format}:
    get:
      operationId: satellites_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - satellites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSatelliteList'
          description: ''
  /satellites/{norad_catalog_number}/:
    get:
      operationId: satellites_retrieve
      parameters:
      - in: path
        name: norad_catalog_number
        schema:
          type: string
        required: true
      tags:
      - satellites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Satellite'
          description: ''
  /satellites/{norad_catalog_number}{format}:
    get:
      operationId: satellites_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: norad_catalog_number
        schema:
          type: string
        required: true
      tags:
      - satellites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Satellite'
          description: ''
  /satellites/{norad_catalog_number}/ephemeris/:
    get:
      operationId: satellites_ephemeris_retrieve
      parameters:
      - in: path
        name: norad_catalog_number
        schema:
          type: string
        required: true
      tags:
      - satellites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /satellites/{norad_catalog_number}/ephemeris{format}:
    get:
      operationId: satellites_ephemeris_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: norad_catalog_number
        schema:
          type: string
        required: true
      tags:
      - satellites
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - en
          - en-us
      tags:
      - schema
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /smallbodies/:
    get:
      operationId: smallbodies_retrieve
      tags:
      - smallbodies
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /smallbodies{format}:
    get:
      operationId: smallbodies_formatted_retrieve_2
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - smallbodies
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /smallbodies/{primary_spk_id_or_pdes}/:
    get:
      operationId: smallbodies_retrieve_2
      parameters:
      - in: path
        name: primary_spk_id_or_pdes
        schema:
          type: string
        required: true
      tags:
      - smallbodies
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmallBody'
          description: ''
  /smallbodies/{primary_spk_id_or_pdes}{format}:
    get:
      operationId: smallbodies_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: primary_spk_id_or_pdes
        schema:
          type: string
        required: true
      tags:
      - smallbodies
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmallBody'
          description: ''
  /smallbodies/{primary_spk_id}/ephemerides/:
    get:
      operationId: smallbodies_ephemerides_retrieve
      parameters:
      - in: path
        name: primary_spk_id
        schema:
          type: string
        required: true
      tags:
      - smallbodies
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmallBodyEphemeris'
          description: ''
  /smallbodies/{primary_spk_id}/ephemerides{format}:
    get:
      operationId: smallbodies_ephemerides_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: primary_spk_id
        schema:
          type: string
        required: true
      tags:
      - smallbodies
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmallBodyEphemeris'
          description: ''
  /standardstars/:
    get:
      operationId: standardstars_list
      description: |-
        List of Standard Stars (search endpoint only).

        Standard Stars are items belonging to a Catalogue (more precisely one
        of its Table), and associated with an Astronomical Object (the two
        models are voluntarily composed rather merged).

        This endpoint is for search purposes only. Calling it without
        the necessary `around` and `catalogue` parameters will return an
        Invalid request (code 400).

        The `around` parameter designates the position in the sky around which
        one looks for standard standard stars.

        The `around` parameter must be provided in the form: `?around=float1,float2`
        where `float1` is the Right Ascension in decimal degrees, and `float2` is
        a Declination in decimal degrees. R.A. and Dec. are assumed to be
        provided in the ICRS J2000 frame.

        The `catalogue` parameters must provide the ID of the catalogue where
        standard stars are searched for.

        A third and optional parameter `count` can be provided to define how many
        standard stars (whatever their angular distance to the pointed direction)
        must be returned in maximum. The `count` value is 5 by default, and 20
        at maximum.
      tags:
      - standardstars
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StandardStar'
          description: ''
  /standardstars{format}:
    get:
      operationId: standardstars_formatted_list
      description: |-
        List of Standard Stars (search endpoint only).

        Standard Stars are items belonging to a Catalogue (more precisely one
        of its Table), and associated with an Astronomical Object (the two
        models are voluntarily composed rather merged).

        This endpoint is for search purposes only. Calling it without
        the necessary `around` and `catalogue` parameters will return an
        Invalid request (code 400).

        The `around` parameter designates the position in the sky around which
        one looks for standard standard stars.

        The `around` parameter must be provided in the form: `?around=float1,float2`
        where `float1` is the Right Ascension in decimal degrees, and `float2` is
        a Declination in decimal degrees. R.A. and Dec. are assumed to be
        provided in the ICRS J2000 frame.

        The `catalogue` parameters must provide the ID of the catalogue where
        standard stars are searched for.

        A third and optional parameter `count` can be provided to define how many
        standard stars (whatever their angular distance to the pointed direction)
        must be returned in maximum. The `count` value is 5 by default, and 20
        at maximum.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - standardstars
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StandardStar'
          description: ''
  /stats/:
    get:
      operationId: stats_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - stats
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppStatsList'
          description: ''
  /stats{format}:
    get:
      operationId: stats_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - stats
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppStatsList'
          description: ''
  /stats/{id}/:
    get:
      operationId: stats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - stats
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStats'
          description: ''
  /stats/{id}{format}:
    get:
      operationId: stats_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - stats
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStats'
          description: ''
  /stripe/billing-portal/:
    post:
      operationId: stripe_billing_portal_create
      tags:
      - stripe
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /stripe/billing-portal{format}:
    post:
      operationId: stripe_billing_portal_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - stripe
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /stripe/new-subscription/:
    post:
      operationId: stripe_new_subscription_create
      tags:
      - stripe
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /stripe/new-subscription{format}:
    post:
      operationId: stripe_new_subscription_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - stripe
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /stripe/payment-setup/:
    post:
      operationId: stripe_payment_setup_create
      tags:
      - stripe
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /stripe/payment-setup{format}:
    post:
      operationId: stripe_payment_setup_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - stripe
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /subscriptions/:
    get:
      operationId: subscriptions_list
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitySubscriptionCreate'
          description: ''
    post:
      operationId: subscriptions_create
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionCreate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionCreate'
          description: ''
  /subscriptions{format}:
    get:
      operationId: subscriptions_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitySubscriptionCreate'
          description: ''
    post:
      operationId: subscriptions_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionCreate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionCreate'
          description: ''
  /subscriptions/{id}/:
    get:
      operationId: subscriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          description: ''
    put:
      operationId: subscriptions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          description: ''
    patch:
      operationId: subscriptions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivitySubscriptionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivitySubscriptionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivitySubscriptionUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          description: ''
    delete:
      operationId: subscriptions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /subscriptions/{id}{format}:
    get:
      operationId: subscriptions_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          description: ''
    put:
      operationId: subscriptions_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivitySubscriptionUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          description: ''
    patch:
      operationId: subscriptions_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivitySubscriptionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivitySubscriptionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivitySubscriptionUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitySubscriptionUpdate'
          description: ''
    delete:
      operationId: subscriptions_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /targetlists/:
    get:
      operationId: targetlists_list
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetList'
          description: ''
    post:
      operationId: targetlists_create
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
  /targetlists{format}:
    get:
      operationId: targetlists_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetList'
          description: ''
    post:
      operationId: targetlists_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
  /targetlists/{uuid}/:
    get:
      operationId: targetlists_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    put:
      operationId: targetlists_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    patch:
      operationId: targetlists_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    delete:
      operationId: targetlists_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /targetlists/{uuid}{format}:
    get:
      operationId: targetlists_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    put:
      operationId: targetlists_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    patch:
      operationId: targetlists_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetList'
          description: ''
    delete:
      operationId: targetlists_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - targetlists
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /targets/:
    get:
      operationId: targets_list
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Target'
          description: ''
    post:
      operationId: targets_create
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
  /targets{format}:
    get:
      operationId: targets_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Target'
          description: ''
    post:
      operationId: targets_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
  /targets/{id}/:
    get:
      operationId: targets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    put:
      operationId: targets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    patch:
      operationId: targets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    delete:
      operationId: targets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /targets/{id}{format}:
    get:
      operationId: targets_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    put:
      operationId: targets_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Target'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Target'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    patch:
      operationId: targets_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTarget'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: ''
    delete:
      operationId: targets_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - targets
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /telegrams/ATel/:
    get:
      operationId: telegrams_ATel_list
      tags:
      - telegrams
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AstronomersTelegram'
          description: ''
  /telegrams/ATel{format}:
    get:
      operationId: telegrams_ATel_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - telegrams
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AstronomersTelegram'
          description: ''
  /telegrams/ATel/{identifier}/:
    get:
      operationId: telegrams_ATel_retrieve
      parameters:
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomersTelegram'
          description: ''
    put:
      operationId: telegrams_ATel_update
      parameters:
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          description: ''
    patch:
      operationId: telegrams_ATel_partial_update
      parameters:
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAstronomersTelegramPrivateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAstronomersTelegramPrivateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAstronomersTelegramPrivateUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          description: ''
  /telegrams/ATel/{identifier}{format}:
    get:
      operationId: telegrams_ATel_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomersTelegram'
          description: ''
    put:
      operationId: telegrams_ATel_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          description: ''
    patch:
      operationId: telegrams_ATel_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAstronomersTelegramPrivateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAstronomersTelegramPrivateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAstronomersTelegramPrivateUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomersTelegramPrivateUpdate'
          description: ''
  /telegrams/GCN/Circulars/{identifier}/:
    get:
      operationId: telegrams_GCN_Circulars_retrieve
      parameters:
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCNCircular'
          description: ''
  /telegrams/GCN/Circulars/{identifier}{format}:
    get:
      operationId: telegrams_GCN_Circulars_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: identifier
        schema:
          type: integer
        required: true
      tags:
      - telegrams
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCNCircular'
          description: ''
  /telescopes/:
    get:
      operationId: telescopes_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTelescopeListCreateList'
          description: ''
    post:
      operationId: telescopes_create
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeListCreate'
          description: ''
  /telescopes{format}:
    get:
      operationId: telescopes_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTelescopeListCreateList'
          description: ''
    post:
      operationId: telescopes_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeListCreate'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeListCreate'
          description: ''
  /telescopes/{uuid_or_alias}/:
    get:
      operationId: telescopes_retrieve
      parameters:
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeUpdate'
          description: ''
    put:
      operationId: telescopes_update
      parameters:
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelescopeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelescopeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeUpdate'
          description: ''
    patch:
      operationId: telescopes_partial_update
      parameters:
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTelescopeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTelescopeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTelescopeUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeUpdate'
          description: ''
    delete:
      operationId: telescopes_destroy
      parameters:
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /telescopes/{uuid_or_alias}{format}:
    get:
      operationId: telescopes_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeUpdate'
          description: ''
    put:
      operationId: telescopes_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelescopeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TelescopeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeUpdate'
          description: ''
    patch:
      operationId: telescopes_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTelescopeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTelescopeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTelescopeUpdate'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeUpdate'
          description: ''
    delete:
      operationId: telescopes_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /telescopes/{uuid_or_alias}/images/:
    get:
      operationId: telescopes_images_list
      parameters:
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelescopeImageList'
          description: ''
    post:
      operationId: telescopes_images_create
      parameters:
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeImageList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeImageList'
          description: ''
  /telescopes/{uuid_or_alias}/images{format}:
    get:
      operationId: telescopes_images_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelescopeImageList'
          description: ''
    post:
      operationId: telescopes_images_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: uuid_or_alias
        schema:
          type: string
        required: true
      tags:
      - telescopes
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TelescopeImageList'
      security:
      - tokenAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelescopeImageList'
          description: ''
  /telescopes/updates/:
    get:
      operationId: telescopes_updates_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTelescopeUpdateListList'
          description: ''
  /telescopes/updates{format}:
    get:
      operationId: telescopes_updates_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - telescopes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTelescopeUpdateListList'
          description: ''
  /telescopestations/:
    get:
      operationId: telescopestations_list
      tags:
      - telescopestations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelescopeStation'
          description: ''
  /telescopestations{format}:
    get:
      operationId: telescopestations_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - telescopestations
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelescopeStation'
          description: ''
  /votes/:
    get:
      operationId: votes_list
      tags:
      - votes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
  /votes{format}:
    get:
      operationId: votes_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - votes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
  /votes/{id}/:
    get:
      operationId: votes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
    put:
      operationId: votes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vote'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
    patch:
      operationId: votes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVote'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
  /votes/{id}{format}:
    get:
      operationId: votes_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votes
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
    put:
      operationId: votes_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vote'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
    patch:
      operationId: votes_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVote'
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
  /votessessions/:
    get:
      operationId: votessessions_list
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoteSession'
          description: ''
  /votessessions{format}:
    get:
      operationId: votessessions_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoteSession'
          description: ''
  /votessessions/{id}/:
    get:
      operationId: votessessions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoteSession'
          description: ''
  /votessessions/{id}{format}:
    get:
      operationId: votessessions_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoteSession'
          description: ''
  /votessessions/{id}/comments/:
    get:
      operationId: votessessions_comments_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoteSessionComment'
          description: ''
    post:
      operationId: votessessions_comments_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoteSessionComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoteSessionComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoteSessionComment'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoteSessionComment'
          description: ''
  /votessessions/{id}/comments{format}:
    get:
      operationId: votessessions_comments_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoteSessionComment'
          description: ''
    post:
      operationId: votessessions_comments_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoteSessionComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoteSessionComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoteSessionComment'
        required: true
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoteSessionComment'
          description: ''
  /votessessions/{id}/votes/:
    get:
      operationId: votessessions_votes_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
  /votessessions/{id}/votes{format}:
    get:
      operationId: votessessions_votes_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - votessessions
      security:
      - tokenAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
components:
  schemas:
    Activity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date-time
        links:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLink'
        title:
          type: string
          default: ''
        content:
          type: string
          nullable: true
          default: ''
        label:
          type: string
          default: ''
        profile:
          type: string
        satellite:
          type: string
        observing_site:
          type: string
          format: uuid
          nullable: true
        telescope:
          type: string
          format: uuid
          nullable: true
        instrument:
          type: string
          format: uuid
          nullable: true
        programme:
          $ref: '#/components/schemas/Programme'
        programme_type:
          type: string
        target_name:
          type: string
        coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        organisation:
          type: string
        collaboration:
          type: integer
          nullable: true
      required:
      - creation_date
      - id
    ActivityLink:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        url:
          type: string
          format: uri
          maxLength: 2000
    ActivitySubscriptionCreate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        owner:
          type: string
        is_active:
          type: boolean
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        emails_sent:
          type: integer
          readOnly: true
        profile:
          type: string
        person:
          type: integer
        name:
          type: string
        programme:
          type: string
        observing_site:
          type: string
          format: uuid
        telescope:
          type: string
          format: uuid
        instrument:
          type: string
          format: uuid
        satellite:
          type: string
        target:
          $ref: '#/components/schemas/AstronomicalObject'
        coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        organisation:
          type: integer
        collaboration:
          type: integer
      required:
      - date_created
      - emails_sent
      - is_active
      - pk
    ActivitySubscriptionUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        owner:
          type: string
        is_active:
          type: boolean
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        emails_sent:
          type: integer
          readOnly: true
        profile:
          type: string
        person:
          type: integer
        name:
          type: string
        programme:
          type: string
        observing_site:
          type: string
          format: uuid
        telescope:
          type: string
          format: uuid
        instrument:
          type: string
          format: uuid
        satellite:
          type: string
        target:
          $ref: '#/components/schemas/AstronomicalObject'
        coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        organisation:
          type: integer
        collaboration:
          type: integer
      required:
      - date_created
      - emails_sent
      - is_active
      - pk
    Address:
      type: object
      properties:
        line_1:
          type: string
          maxLength: 200
        line_2:
          type: string
          maxLength: 200
        zip_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        state_province:
          type: string
          maxLength: 200
        country:
          type: string
          maxLength: 200
        continent:
          oneOf:
          - $ref: '#/components/schemas/ContinentEnum'
          - $ref: '#/components/schemas/BlankEnum'
        time_zone_id:
          type: string
          maxLength: 200
        time_zone_name:
          type: string
          maxLength: 200
        time_zone_utc_offset:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        time_zone_dst_offset:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    Age:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    AggregateUsageEnum:
      enum:
      - last_during_period
      - last_ever
      - max
      - sum
      type: string
    Albedo:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
    Alias:
      type: object
      properties:
        name:
          type: string
          maxLength: 500
        vizier_catalogue_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        ned_associated_object_type:
          type: string
          maxLength: 20
      required:
      - name
    Angle:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    AppStats:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        count_exoplanets:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_astronomers_telegrams:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_observing_sites:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_observing_sites_updates:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_telescopes:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_instruments:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_observing_runs:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_night_logs:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_observations:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_datasets:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_datasets_in_collaborations:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_datasets_in_organisations:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_fitsfiles:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_fitsfiles_in_arcsecond:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_fitsfiles_out_arcsecond:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_datafiles:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_datafiles_in_arcsecond:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_datafiles_out_arcsecond:
          type: integer
          maximum: 2147483647
          minimum: 0
        data_size_megabytes:
          type: number
          format: double
        data_size_megabytes_in_arcsecond:
          type: number
          format: double
        data_size_megabytes_out_arcsecond:
          type: number
          format: double
        count_nodes_iobserve:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_active_subscribers:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_twitter_followers:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_collaborations:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_organisations:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_slack_integrations:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_slack_requested_commands:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_slack_successful_commands:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_activity_subscriptions:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_activity_subscriptions_emails:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_api_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_api_log_rows:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_cli_downloads_total:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - creation_date
      - id
    AstronomersTelegram:
      type: object
      properties:
        identifier:
          type: string
          maxLength: 10
        title:
          type: string
          maxLength: 1000
        publication_date:
          type: string
          format: date-time
          readOnly: true
        credential_certification:
          type: string
          maxLength: 500
        subjects:
          type: array
          items:
            type: string
          readOnly: true
        content:
          type: string
          maxLength: 20000
        authors:
          type: array
          items:
            $ref: '#/components/schemas/PersonShort'
          readOnly: true
        related_telegrams:
          type: array
          items:
            type: string
          readOnly: true
        referring_telegrams:
          type: array
          items:
            type: string
          readOnly: true
        detected_objects:
          type: array
          items:
            type: string
          readOnly: true
        external_links:
          type: array
          items:
            type: integer
        original_url:
          type: string
          readOnly: true
      required:
      - authors
      - detected_objects
      - identifier
      - original_url
      - publication_date
      - referring_telegrams
      - related_telegrams
      - subjects
    AstronomersTelegramPrivateUpdate:
      type: object
      properties:
        identifier:
          type: string
        raw_html_page:
          type: string
      required:
      - identifier
      - raw_html_page
    AstronomicalCoordinates:
      type: object
      properties:
        right_ascension:
          type: number
          format: double
          nullable: true
        declination:
          type: number
          format: double
          nullable: true
        epoch:
          type: number
          format: double
          readOnly: true
      required:
      - epoch
    AstronomicalObject:
      type: object
      properties:
        name:
          type: string
        source:
          oneOf:
          - $ref: '#/components/schemas/SourceEnum'
          - $ref: '#/components/schemas/BlankEnum'
        equatorial_coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        ecliptic_coordinates:
          $ref: '#/components/schemas/EclipticCoordinates'
        galactic_coordinates:
          $ref: '#/components/schemas/GalacticCoordinates'
        super_galactic_coordinates:
          $ref: '#/components/schemas/GalacticCoordinates'
        spectral_type:
          $ref: '#/components/schemas/SpectralType'
        morphological_type:
          $ref: '#/components/schemas/MorphologicalType'
        proper_motion:
          $ref: '#/components/schemas/ProperMotion'
        parallax:
          $ref: '#/components/schemas/Parallax'
        radial_velocity:
          $ref: '#/components/schemas/RadialVelocity'
        age:
          $ref: '#/components/schemas/Age'
        mass:
          $ref: '#/components/schemas/Mass'
        radius:
          $ref: '#/components/schemas/Radius'
        distance:
          $ref: '#/components/schemas/Distance'
        metallicity:
          $ref: '#/components/schemas/Metallicity'
        effective_temperature:
          $ref: '#/components/schemas/Temperature'
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/Alias'
        object_types:
          type: array
          items:
            type: string
          readOnly: true
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
        fluxes:
          type: array
          items:
            $ref: '#/components/schemas/Flux'
        planets:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - object_types
      - planets
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    BadgeEnum:
      enum:
      - APIs
      - bugfix
      - business
      - infra
      - improvement
      - internals
      - intercom
      - newfeature
      - tests
      type: string
    BetaInterest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 100
        for_organisation:
          type: string
          maxLength: 500
        beta_name:
          type: string
          maxLength: 100
        with_options:
          type: string
          maxLength: 500
      required:
      - date
      - id
    BillingSchemeEnum:
      enum:
      - per_unit
      - tiered
      type: string
    BlankEnum:
      enum:
      - ''
    CCDConfiguration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        binning_mode_x:
          type: integer
          maximum: 32767
          minimum: 0
        binning_mode_y:
          type: integer
          maximum: 32767
          minimum: 0
        read_mode:
          type: string
          maxLength: 20
        ccd:
          type: integer
          nullable: true
      required:
      - id
    Calibration:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        notes:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        start:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
        night_log:
          type: string
          format: uuid
        data_file:
          type: integer
          nullable: true
        type:
          oneOf:
          - $ref: '#/components/schemas/Type8f9Enum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - index
      - night_log
      - uuid
    Catalogue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        key:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 100
        secondary_name:
          type: string
          maxLength: 100
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
        source_url:
          type: string
          format: uri
          maxLength: 2000
        description:
          type: string
        notes:
          type: string
        tables:
          type: array
          items:
            $ref: '#/components/schemas/CatalogueTable'
      required:
      - id
      - key
      - name
      - secondary_name
      - tables
    CatalogueRow:
      type: object
      properties:
        index:
          type: integer
          maximum: 32767
          minimum: 0
        table:
          type: integer
        standard_star:
          allOf:
          - $ref: '#/components/schemas/StandardStar'
          readOnly: true
      required:
      - index
      - standard_star
      - table
    CatalogueTable:
      type: object
      properties:
        index:
          type: integer
          maximum: 32767
          minimum: 0
        name:
          type: string
          maxLength: 100
        catalogue:
          type: integer
        rows_count:
          type: integer
          readOnly: true
        rows:
          type: array
          items:
            $ref: '#/components/schemas/CatalogueRow'
          readOnly: true
      required:
      - catalogue
      - index
      - name
      - rows
      - rows_count
    CategoryEnum:
      enum:
      - general
      - apis
      - datasets
      - obsruns
      - nightlogs
      - obssites
      - telescopes
      - archives
      - objects
      - exoplanets
      - charts
      - telegrams
      - publications
      type: string
    Classification:
      type: object
      properties:
        type:
          type: string
          maxLength: 50
        as_published:
          type: string
          maxLength: 100
        ned_homogenized:
          type: string
          maxLength: 100
        flag:
          type: string
          maxLength: 100
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - type
    CollaborationCreate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        description:
          type: string
        website_url:
          type: string
          format: uri
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/CollaborationInvitationUpdate'
          readOnly: true
      required:
      - invitations
      - members
      - name
      - pk
    CollaborationInvitationCreate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        inviter:
          type: string
        invitee:
          type: string
        invitee_email:
          type: string
          format: email
        token:
          type: string
          readOnly: true
        emails_sent:
          type: integer
        message:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_accepted:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: string
          readOnly: true
        status:
          type: string
        collaboration:
          type: integer
      required:
      - collaboration
      - date_accepted
      - date_created
      - duration
      - pk
      - token
    CollaborationInvitationUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        inviter:
          type: string
        invitee:
          type: string
        invitee_email:
          type: string
          format: email
        token:
          type: string
          readOnly: true
        emails_sent:
          type: integer
        message:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_accepted:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: string
          readOnly: true
        status:
          type: string
        collaboration:
          type: integer
        collaboration_name:
          type: string
      required:
      - date_accepted
      - date_created
      - duration
      - pk
      - token
    CollaborationListRetrieve:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        description:
          type: string
        website_url:
          type: string
          format: uri
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/CollaborationInvitationUpdate'
          readOnly: true
      required:
      - invitations
      - members
      - pk
    CollaborationUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        description:
          type: string
        website_url:
          type: string
          format: uri
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/CollaborationInvitationUpdate'
          readOnly: true
      required:
      - invitations
      - members
      - pk
    CollectionMethodEnum:
      enum:
      - charge_automatically
      - send_invoice
      type: string
    ContinentEnum:
      enum:
      - Asia
      - Africa
      - Antarctica
      - Europe
      - North America
      - Oceania
      - South America
      type: string
    Coordinates:
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        height:
          type: number
          format: double
    CostModelEnum:
      enum:
      - shared
      - owner
      type: string
    CustomPasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    DJSubscriptionPlan:
      type: object
      properties:
        djstripe_id:
          type: integer
          readOnly: true
          title: ID
        djstripe_created:
          type: string
          format: date-time
          readOnly: true
        djstripe_updated:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          maxLength: 255
        livemode:
          type: boolean
          nullable: true
          description: Null here indicates that the livemode status is unknown or
            was previously unrecorded. Otherwise, this field indicates whether this
            record comes from Stripe test mode or live mode operation.
        created:
          type: string
          format: date-time
          nullable: true
          description: The datetime this object was created in stripe.
        metadata:
          type: string
          nullable: true
          description: A set of key/value pairs that you can attach to an object.
            It can be useful for storing additional information about an object in
            a structured format.
        description:
          type: string
          nullable: true
          description: A description of this object.
        active:
          type: boolean
          description: Whether the plan can be used for new purchases.
        aggregate_usage:
          description: Specifies a usage aggregation strategy for plans of usage_type=metered.
            Allowed values are `sum` for summing up all usage during a period, `last_during_period`
            for picking the last usage record reported within a period, `last_ever`
            for picking the last usage record ever (across period bounds) or max which
            picks the usage record with the maximum reported usage during a period.
            Defaults to `sum`.
          oneOf:
          - $ref: '#/components/schemas/AggregateUsageEnum'
          - $ref: '#/components/schemas/BlankEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,9}(?:\.\d{0,2})?$
          nullable: true
          description: Amount (as decimal) to be charged on the interval specified.
        amount_decimal:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,12})?$
          nullable: true
          description: The unit amount in cents to be charged, represented as a decimal
            string with at most 12 decimal places.
        billing_scheme:
          description: Describes how to compute the price per period. Either `per_unit`
            or `tiered`. `per_unit` indicates that the fixed amount (specified in
            amount) will be charged per unit in quantity (for plans with `usage_type=licensed`),
            or per unit of total usage (for plans with `usage_type=metered`). `tiered`
            indicates that the unit pricing will be computed using a tiering strategy
            as defined using the tiers and tiers_mode attributes.
          oneOf:
          - $ref: '#/components/schemas/BillingSchemeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        currency:
          type: string
          description: Three-letter ISO currency code
          maxLength: 3
        interval:
          allOf:
          - $ref: '#/components/schemas/IntervalEnum'
          description: The frequency with which a subscription should be billed.
        interval_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: The number of intervals (specified in the interval property)
            between each subscription billing.
        nickname:
          type: string
          description: A brief description of the plan, hidden from customers.
          maxLength: 5000
        tiers:
          type: string
          nullable: true
          description: Each element represents a pricing tier. This parameter requires
            `billing_scheme` to be set to `tiered`.
        tiers_mode:
          nullable: true
          description: Defines if the tiering price should be `graduated` or `volume`
            based. In `volume`-based tiering, the maximum quantity within a period
            determines the per unit price, in `graduated` tiering pricing can successively
            change as the quantity grows.
          oneOf:
          - $ref: '#/components/schemas/TiersModeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        transform_usage:
          type: string
          nullable: true
          description: Apply a transformation to the reported usage or set quantity
            before computing the billed price. Cannot be combined with `tiers`.
        trial_period_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Number of trial period days granted when subscribing a customer
            to this plan. Null if the plan has no trial period.
        usage_type:
          allOf:
          - $ref: '#/components/schemas/UsageTypeEnum'
          description: Configures how the quantity per period should be determined,
            can be either `metered` or `licensed`. `licensed` will automatically bill
            the `quantity` set for a plan when adding it to a subscription, `metered`
            will aggregate the total usage based on usage records. Defaults to `licensed`.
        djstripe_owner_account:
          type: integer
          title: ID
          nullable: true
          description: The Stripe Account this object belongs to.
        product:
          type: integer
          title: ID
          nullable: true
          description: The product whose pricing this plan determines.
      required:
      - active
      - currency
      - djstripe_created
      - djstripe_id
      - djstripe_updated
      - id
      - interval
    DJSubscriptionPrice:
      type: object
      properties:
        djstripe_id:
          type: integer
          readOnly: true
          title: ID
        djstripe_created:
          type: string
          format: date-time
          readOnly: true
        djstripe_updated:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          maxLength: 255
        livemode:
          type: boolean
          nullable: true
          description: Null here indicates that the livemode status is unknown or
            was previously unrecorded. Otherwise, this field indicates whether this
            record comes from Stripe test mode or live mode operation.
        created:
          type: string
          format: date-time
          nullable: true
          description: The datetime this object was created in stripe.
        metadata:
          type: string
          nullable: true
          description: A set of key/value pairs that you can attach to an object.
            It can be useful for storing additional information about an object in
            a structured format.
        description:
          type: string
          nullable: true
          description: A description of this object.
        active:
          type: boolean
          description: Whether the price can be used for new purchases.
        currency:
          type: string
          description: Three-letter ISO currency code
          maxLength: 3
        nickname:
          type: string
          description: A brief description of the plan, hidden from customers.
          maxLength: 250
        recurring:
          type: string
          nullable: true
          description: The recurring components of a price such as `interval` and
            `usage_type`.
        type:
          allOf:
          - $ref: '#/components/schemas/DJSubscriptionPriceTypeEnum'
          description: Whether the price is for a one-time purchase or a recurring
            (subscription) purchase.
        unit_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: The unit amount in cents to be charged, represented as a whole
            integer if possible. Null if a sub-cent precision is required.
        unit_amount_decimal:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,12})?$
          nullable: true
          description: The unit amount in cents to be charged, represented as a decimal
            string with at most 12 decimal places.
        billing_scheme:
          description: Describes how to compute the price per period. Either `per_unit`
            or `tiered`. `per_unit` indicates that the fixed amount (specified in
            `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity`
            (for prices with `usage_type=licensed`), or per unit of total usage (for
            prices with `usage_type=metered`). `tiered` indicates that the unit pricing
            will be computed using a tiering strategy as defined using the `tiers`
            and `tiers_mode` attributes.
          oneOf:
          - $ref: '#/components/schemas/BillingSchemeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        lookup_key:
          type: string
          nullable: true
          description: A lookup key used to retrieve prices dynamically from a static
            string.
          maxLength: 250
        tiers:
          type: string
          nullable: true
          description: Each element represents a pricing tier. This parameter requires
            `billing_scheme` to be set to `tiered`.
        tiers_mode:
          nullable: true
          description: Defines if the tiering price should be `graduated` or `volume`
            based. In `volume`-based tiering, the maximum quantity within a period
            determines the per unit price, in `graduated` tiering pricing can successively
            change as the quantity grows.
          oneOf:
          - $ref: '#/components/schemas/TiersModeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        transform_quantity:
          type: string
          nullable: true
          description: Apply a transformation to the reported usage or set quantity
            before computing the amount billed. Cannot be combined with `tiers`.
        djstripe_owner_account:
          type: integer
          title: ID
          nullable: true
          description: The Stripe Account this object belongs to.
        product:
          type: integer
          title: ID
          description: The product this price is associated with.
      required:
      - active
      - currency
      - djstripe_created
      - djstripe_id
      - djstripe_updated
      - id
      - product
      - type
    DJSubscriptionPriceTypeEnum:
      enum:
      - one_time
      - recurring
      type: string
    DJSubscriptions:
      type: object
      properties:
        djstripe_id:
          type: integer
          readOnly: true
          title: ID
        plan:
          allOf:
          - $ref: '#/components/schemas/DJSubscriptionPlan'
          readOnly: true
        price:
          allOf:
          - $ref: '#/components/schemas/DJSubscriptionPrice'
          readOnly: true
        can_reactivate:
          type: boolean
          readOnly: true
        djstripe_created:
          type: string
          format: date-time
          readOnly: true
        djstripe_updated:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          maxLength: 255
        livemode:
          type: boolean
          nullable: true
          description: Null here indicates that the livemode status is unknown or
            was previously unrecorded. Otherwise, this field indicates whether this
            record comes from Stripe test mode or live mode operation.
        created:
          type: string
          format: date-time
          nullable: true
          description: The datetime this object was created in stripe.
        metadata:
          type: string
          nullable: true
          description: A set of key/value pairs that you can attach to an object.
            It can be useful for storing additional information about an object in
            a structured format.
        description:
          type: string
          nullable: true
          description: A description of this object.
        application_fee_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: A positive decimal that represents the fee percentage of the
            subscription invoice amount that will be transferred to the application
            owner's Stripe account each billing period.
        billing_cycle_anchor:
          type: string
          format: date-time
          nullable: true
          description: Determines the date of the first full invoice, and, for plans
            with `month` or `year` intervals, the day of the month for subsequent
            invoices.
        billing_thresholds:
          type: string
          nullable: true
          description: Define thresholds at which an invoice will be sent, and the
            subscription advanced to a new billing period.
        cancel_at:
          type: string
          format: date-time
          nullable: true
          description: A date in the future at which the subscription will automatically
            get canceled.
        cancel_at_period_end:
          type: boolean
          description: If the subscription has been canceled with the ``at_period_end``
            flag set to true, ``cancel_at_period_end`` on the subscription will be
            true. You can use this attribute to determine whether a subscription that
            has a status of active is scheduled to be canceled at the end of the current
            period.
        canceled_at:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has been canceled, the date of that cancellation.
            If the subscription was canceled with ``cancel_at_period_end``, canceled_at
            will still reflect the date of the initial cancellation request, not the
            end of the subscription period when the subscription is automatically
            moved to a canceled state.
        collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethodEnum'
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Stripe will attempt to pay this subscription at the end
            of the cycle using the default source attached to the customer. When sending
            an invoice, Stripe will email your customer an invoice with payment instructions.
        current_period_end:
          type: string
          format: date-time
          description: End of the current period for which the subscription has been
            invoiced. At the end of this period, a new invoice will be created.
        current_period_start:
          type: string
          format: date-time
          description: Start of the current period for which the subscription has
            been invoiced.
        days_until_due:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Number of days a customer has to pay invoices generated by
            this subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
        discount:
          type: string
          nullable: true
          description: Describes the current discount applied to this subscription,
            if there is one. When billing, a discount applied to a subscription overrides
            a discount applied on a customer-wide basis.
        ended_at:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has ended (either because it was canceled
            or because the customer was switched to a subscription to a new plan),
            the date the subscription ended.
        next_pending_invoice_item_invoice:
          type: string
          format: date-time
          nullable: true
          description: Specifies the approximate timestamp on which any pending invoice
            items will be billed according to the schedule provided at pending_invoice_item_interval.
        pause_collection:
          type: string
          nullable: true
          description: If specified, payment collection for this subscription will
            be paused.
        pending_invoice_item_interval:
          type: string
          nullable: true
          description: Specifies an interval for how often to bill for any pending
            invoice items. It is analogous to calling Create an invoice for the given
            subscription at the specified interval.
        pending_update:
          type: string
          nullable: true
          description: If specified, pending updates that will be applied to the subscription
            once the latest_invoice has been paid.
        proration_behavior:
          description: Determines how to handle prorations when the billing cycle
            changes (e.g., when switching plans, resetting billing_cycle_anchor=now,
            or starting a trial), or if an item’s quantity changes
          oneOf:
          - $ref: '#/components/schemas/ProrationBehaviorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        proration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, the proration will be calculated as though the subscription
            was updated at the given time. This can be used to apply exactly the same
            proration that was previewed with upcoming invoice endpoint. It can also
            be used to implement custom proration logic, such as prorating by day
            instead of by second, by providing the time that you wish to use for proration
            calculations
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The quantity applied to this subscription. This value will
            be `null` for multi-plan subscriptions
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Date when the subscription was first created. The date might
            differ from the created date due to backdating.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: The status of this subscription.
        trial_end:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has a trial, the end of that trial.
        trial_start:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has a trial, the beginning of that trial.
        djstripe_owner_account:
          type: integer
          title: ID
          nullable: true
          description: The Stripe Account this object belongs to.
        customer:
          type: integer
          title: ID
          description: The customer associated with this subscription.
        default_payment_method:
          type: integer
          title: ID
          nullable: true
          description: The default payment method for the subscription. It must belong
            to the customer associated with the subscription. If not set, invoices
            will use the default payment method in the customer's invoice settings.
        default_source:
          type: string
          nullable: true
          description: The default payment source for the subscription. It must belong
            to the customer associated with the subscription and be in a chargeable
            state. If not set, defaults to the customer's default source.
        latest_invoice:
          type: integer
          title: ID
          nullable: true
          description: The most recent invoice this subscription has generated.
        pending_setup_intent:
          type: integer
          title: ID
          nullable: true
          description: We can use this SetupIntent to collect user authentication
            when creating a subscription without immediate payment or updating a subscription's
            payment method, allowing you to optimize for off-session payments.
        schedule:
          type: integer
          title: ID
          nullable: true
          description: The schedule associated with this subscription.
        default_tax_rates:
          type: array
          items:
            type: integer
            title: ID
          description: The tax rates that will apply to any subscription item that
            does not have tax_rates set. Invoices created will have their default_tax_rates
            populated from the subscription.
      required:
      - can_reactivate
      - collection_method
      - current_period_end
      - current_period_start
      - customer
      - djstripe_created
      - djstripe_id
      - djstripe_updated
      - id
      - plan
      - price
      - status
    DataArchive:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        portal_url:
          type: string
          format: uri
          maxLength: 200
        organisation:
          type: integer
    DataBlock:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 100
        index:
          type: integer
          maximum: 32767
          minimum: 0
        dimension_x:
          type: integer
          maximum: 2147483647
          minimum: 0
        dimension_y:
          type: integer
          maximum: 2147483647
          minimum: 0
        dimension_z:
          type: integer
          maximum: 2147483647
          minimum: 0
        small_preview_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        small_preview:
          type: string
          format: uri
          nullable: true
      required:
      - pk
    DataFile:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        is_fits:
          type: boolean
          readOnly: true
        is_xisf:
          type: boolean
          readOnly: true
        size:
          type: integer
          readOnly: true
        target_name:
          type: string
        dataset:
          type: string
          format: uuid
        file:
          type: string
          format: uri
        hdus:
          type: array
          items:
            $ref: '#/components/schemas/HDU'
          readOnly: true
        header:
          type: string
          readOnly: true
        data_blocks:
          type: array
          items:
            $ref: '#/components/schemas/DataBlock'
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        tags:
          type: array
          items:
            type: string
      required:
      - data_blocks
      - dataset
      - file
      - hdus
      - header
      - is_fits
      - is_xisf
      - pk
      - size
    DataPackage:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        profile:
          type: string
        datasets:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        cover_image:
          type: string
          format: uri
          nullable: true
        zip_file:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        organisation:
          type: integer
          nullable: true
        collaborations:
          type: array
          items:
            type: integer
        partner_organisations:
          type: array
          items:
            type: integer
      required:
      - creation_date
      - last_update
      - uuid
    DataStorage:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        country:
          type: string
          maxLength: 200
        region:
          type: string
          maxLength: 200
        description:
          type: string
        is_read_only:
          type: boolean
        type:
          $ref: '#/components/schemas/DataStorageTypeEnum'
        cost_model:
          $ref: '#/components/schemas/CostModelEnum'
        credentials:
          type: string
          maxLength: 2000
        role:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
      required:
      - owner
      - role
      - type
      - uuid
    DataStorageTypeEnum:
      enum:
      - aws_s3
      - dropbox
      - disk_local
      type: string
    DataTypeEnum:
      enum:
      - any
      - img
      - ascitab
      - bintab
      - undef
      type: string
    Dataset:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        direct_night_log:
          type: string
          format: uuid
          nullable: true
        observation:
          type: string
          format: uuid
        calibration:
          type: string
          format: uuid
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        data_files:
          type: array
          items:
            type: integer
          readOnly: true
        data_files_count:
          type: integer
          readOnly: true
        data_files_volume:
          type: integer
          readOnly: true
        storage:
          type: string
          format: uuid
          nullable: true
      required:
      - creation_date
      - data_files
      - data_files_count
      - data_files_volume
      - last_update
      - uuid
    DatasetCount:
      type: object
      properties:
        date:
          type: string
        count:
          type: integer
      required:
      - count
      - date
    DirectDataStoragePoint:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        total_bytes:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        files_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        parent:
          type: integer
      required:
      - creation_date
      - id
      - parent
    Distance:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    Dome:
      type: object
      properties:
        name:
          type: string
          maxLength: 1000
        shape:
          type: string
          maxLength: 1000
        image:
          type: string
          format: uri
          nullable: true
    ESOArchiveDataRow:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        archive:
          allOf:
          - $ref: '#/components/schemas/DataArchive'
          readOnly: true
        programme:
          type: integer
          readOnly: true
        coordinates:
          allOf:
          - $ref: '#/components/schemas/AstronomicalCoordinates'
          readOnly: true
        instrument:
          type: string
          format: uuid
          readOnly: true
        exposure_time:
          type: number
          format: double
          maximum: 10000000
          minimum: -10000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        target_name:
          type: string
          maxLength: 100
        date:
          type: string
          format: date-time
          nullable: true
        dataset_id:
          type: string
          maxLength: 100
        more_url:
          type: string
          format: uri
          nullable: true
          maxLength: 1000
        seeing_url:
          type: string
          format: uri
          nullable: true
          maxLength: 1000
        filtername:
          type: string
          maxLength: 255
        mjd_obs:
          type: number
          format: double
          nullable: true
        survey_id:
          type: string
          maxLength: 255
        category:
          type: string
          maxLength: 30
        exposure_type:
          type: string
          maxLength: 30
        technique_type:
          type: string
          maxLength: 30
        release_date:
          type: string
          maxLength: 14
        observation_template:
          type: string
          maxLength: 68
        observation_start:
          type: string
          format: date-time
          nullable: true
        grism:
          type: string
          maxLength: 255
        grating:
          type: string
          maxLength: 255
        slit:
          type: string
          maxLength: 255
        airmass_at_start:
          type: number
          format: double
          nullable: true
      required:
      - archive
      - coordinates
      - creation_date
      - exposure_time
      - id
      - instrument
      - programme
    ESOProgramme:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        investigators:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        identifier:
          type: string
          maxLength: 20
        investigators_list:
          type: string
          maxLength: 1000
        title:
          type: string
          maxLength: 1000
        abstract:
          type: string
        abstract_url:
          type: string
          format: uri
          maxLength: 1000
        period:
          type: string
          maxLength: 100
        observing_mode:
          $ref: '#/components/schemas/ObservingModeEnum'
        programme_type:
          $ref: '#/components/schemas/ProgrammeTypeEnum'
        allocated_time:
          type: string
          maxLength: 100
        telescope_name:
          type: string
          maxLength: 100
        instrument_name:
          type: string
          maxLength: 100
        remarks:
          type: string
          maxLength: 500
        observer_name:
          type: string
          maxLength: 500
        raw_files_url:
          type: string
          format: uri
          maxLength: 500
        publications_url:
          type: string
          format: uri
          maxLength: 500
      required:
      - id
      - identifier
      - investigators
    Eccentricity:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
    EclipticCoordinates:
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        epoch:
          type: number
          format: double
    EllipseAxis:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    EmailAddress:
      type: object
      properties:
        email:
          type: string
          format: email
        verified:
          type: boolean
          default: false
        primary:
          type: boolean
          default: false
    Exoplanet:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        equatorial_coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        mass:
          $ref: '#/components/schemas/Mass'
        radius:
          $ref: '#/components/schemas/Radius'
        inclination:
          $ref: '#/components/schemas/Angle'
        semi_major_axis:
          $ref: '#/components/schemas/EllipseAxis'
        orbital_period:
          $ref: '#/components/schemas/OrbitalPeriod'
        eccentricity:
          $ref: '#/components/schemas/Eccentricity'
        omega_angle:
          $ref: '#/components/schemas/Angle'
        anomaly_angle:
          $ref: '#/components/schemas/Angle'
        lambda_angle:
          $ref: '#/components/schemas/Angle'
        time_periastron:
          $ref: '#/components/schemas/JulianDay'
        time_conjonction:
          $ref: '#/components/schemas/JulianDay'
        angular_distance:
          $ref: '#/components/schemas/Angle'
        tzero_primary_transit:
          $ref: '#/components/schemas/JulianDay'
        tzero_secondary_transit:
          $ref: '#/components/schemas/JulianDay'
        impact_parameter:
          $ref: '#/components/schemas/Angle'
        tzero_radial_velocity:
          $ref: '#/components/schemas/JulianDay'
        velocity_semiamplitude:
          $ref: '#/components/schemas/Velocity'
        calculated_temperature:
          $ref: '#/components/schemas/Temperature'
        measured_temperature:
          $ref: '#/components/schemas/Temperature'
        hottest_point_longitude:
          $ref: '#/components/schemas/Angle'
        geometric_albedo:
          $ref: '#/components/schemas/Albedo'
        surface_gravity:
          $ref: '#/components/schemas/Gravity'
        detection_method:
          type: string
          readOnly: true
        mass_detection_method:
          type: string
          readOnly: true
        radius_detection_method:
          type: string
          readOnly: true
        parent_star:
          type: string
      required:
      - detection_method
      - mass_detection_method
      - name
      - parent_star
      - radius_detection_method
    ExoplanetCoordinates:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        equatorial_coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
      required:
      - name
    Flux:
      type: object
      properties:
        name:
          type: string
          maxLength: 500
        value:
          type: number
          format: double
          nullable: true
        error:
          type: number
          format: double
          nullable: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
        quality:
          type: string
          maxLength: 10
        system:
          type: string
          maxLength: 10
        unit:
          type: string
          maxLength: 10
        flags:
          type: string
          maxLength: 20
      required:
      - name
    GCNCircular:
      type: object
      properties:
        identifier:
          type: string
          maxLength: 10
        title:
          type: string
          maxLength: 1000
        publication_date:
          type: string
          format: date-time
          nullable: true
        content:
          type: string
        submitter:
          $ref: '#/components/schemas/PersonShort'
        related_circulars:
          type: array
          items:
            type: string
          readOnly: true
        external_links:
          type: array
          items:
            type: integer
        detected_objects:
          type: array
          items:
            type: integer
      required:
      - detected_objects
      - external_links
      - identifier
      - related_circulars
    GalacticCoordinates:
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        epoch:
          type: number
          format: double
    GeminiArchiveDataRow:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        archive:
          allOf:
          - $ref: '#/components/schemas/DataArchive'
          readOnly: true
        programme:
          type: integer
          readOnly: true
        coordinates:
          allOf:
          - $ref: '#/components/schemas/AstronomicalCoordinates'
          readOnly: true
        instrument:
          type: string
          format: uuid
          readOnly: true
        exposure_time:
          type: number
          format: double
          maximum: 10000000
          minimum: -10000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        target_name:
          type: string
          maxLength: 100
        date:
          type: string
          format: date-time
          nullable: true
        observation_id:
          type: string
          maxLength: 100
        observation_type:
          type: string
          maxLength: 30
        airmass:
          type: number
          format: double
          nullable: true
      required:
      - archive
      - coordinates
      - creation_date
      - exposure_time
      - id
      - instrument
      - programme
    GeminiProgramme:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        investigators:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        identifier:
          type: string
          maxLength: 20
        investigators_list:
          type: string
          maxLength: 1000
        title:
          type: string
          maxLength: 1000
        abstract:
          type: string
        abstract_url:
          type: string
          format: uri
          maxLength: 1000
      required:
      - id
      - identifier
      - investigators
    Gravity:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          maxLength: 10
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
    HDU:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 100
        index:
          type: integer
          maximum: 32767
          minimum: 0
        dimension_x:
          type: integer
          maximum: 2147483647
          minimum: 0
        dimension_y:
          type: integer
          maximum: 2147483647
          minimum: 0
        dimension_z:
          type: integer
          maximum: 2147483647
          minimum: 0
        data_type:
          $ref: '#/components/schemas/DataTypeEnum'
        header_string:
          type: string
        small_preview_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        small_preview:
          type: string
          format: uri
          nullable: true
      required:
      - index
      - pk
    HorizonMask:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        file:
          type: string
          format: uri
        telescope:
          type: string
          format: uuid
        start:
          type: string
          readOnly: true
        direction:
          type: string
          readOnly: true
        altitude_unit:
          type: string
          readOnly: true
        azimuth_values:
          type: array
          items:
            type: number
            format: double
          readOnly: true
        altitude_values:
          type: array
          items:
            type: number
            format: double
          readOnly: true
      required:
      - altitude_unit
      - altitude_values
      - azimuth_values
      - direction
      - file
      - name
      - pk
      - start
      - telescope
    IPACFindingChart:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        input:
          type: string
          maxLength: 100
        target:
          type: string
          readOnly: true
        survey_name:
          type: string
          readOnly: true
        width:
          type: number
          format: double
          nullable: true
        height:
          type: number
          format: double
          nullable: true
        size_unit:
          type: string
          readOnly: true
        orientation:
          type: string
          readOnly: true
        band_name:
          type: string
          maxLength: 100
        observing_date:
          type: string
          format: date
          nullable: true
        fits_url:
          type: string
          format: uri
          maxLength: 500
        image_url:
          type: string
          format: uri
          maxLength: 500
      required:
      - orientation
      - pk
      - size_unit
      - survey_name
      - target
    Instrument:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        archive:
          allOf:
          - $ref: '#/components/schemas/DataArchive'
          readOnly: true
        name:
          type: string
          maxLength: 1000
        acronym:
          type: string
          maxLength: 20
        archive_key:
          type: string
          maxLength: 20
        focus:
          type: string
          maxLength: 50
        telescope:
          type: string
          format: uuid
          nullable: true
        interferometer:
          type: string
          format: uuid
          nullable: true
        satellite:
          type: string
          format: uuid
          nullable: true
      required:
      - archive
      - uuid
    InstrumentConfiguration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filter:
          $ref: '#/components/schemas/InstrumentFilter'
      required:
      - filter
      - id
    InstrumentFilter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1000
        instrument:
          type: string
          format: uuid
      required:
      - id
    Interferometer:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/InterferometerConfiguration'
        name:
          type: string
          maxLength: 1000
        observing_site:
          type: string
          format: uuid
          nullable: true
      required:
      - configurations
      - uuid
    InterferometerConfiguration:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        telescope_stations:
          type: array
          items:
            $ref: '#/components/schemas/TelescopeStation'
        name:
          type: string
          maxLength: 1000
        interferometer:
          type: string
          format: uuid
          nullable: true
      required:
      - telescope_stations
      - uuid
    IntervalEnum:
      enum:
      - day
      - month
      - week
      - year
      type: string
    JulianDay:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
    Link:
      type: object
      properties:
        title:
          type: string
          maxLength: 1000
        url:
          type: string
          format: uri
          maxLength: 2000
    Magnitude:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        value:
          type: number
          format: double
          nullable: true
        error:
          type: number
          format: double
          nullable: true
      required:
      - name
    MagnitudeColor:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        value:
          type: number
          format: double
          nullable: true
        error:
          type: number
          format: double
          nullable: true
      required:
      - name
    Mass:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    Membership:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_joined:
          type: string
          format: date-time
          readOnly: true
        date_left:
          type: string
          format: date-time
          readOnly: true
        role:
          type: string
        username:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
      required:
      - date_joined
      - date_left
      - email
      - first_name
      - last_name
      - pk
      - username
    MembershipCreate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_joined:
          type: string
          format: date
          readOnly: true
        role:
          type: string
        organisation:
          type: string
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        username:
          type: string
        title:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        avatar:
          type: string
          format: uri
          readOnly: true
        is_payer:
          type: boolean
          readOnly: true
      required:
      - avatar
      - date_joined
      - email
      - first_name
      - is_payer
      - last_name
      - organisation
      - pk
      - role
      - title
      - username
    MembershipList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_joined:
          type: string
          format: date
          readOnly: true
        role:
          type: string
        organisation:
          allOf:
          - $ref: '#/components/schemas/OrganisationList'
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        username:
          type: string
        title:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        avatar:
          type: string
          format: uri
          readOnly: true
        is_payer:
          type: boolean
          readOnly: true
      required:
      - avatar
      - date_joined
      - email
      - first_name
      - is_payer
      - last_name
      - organisation
      - pk
      - role
      - title
      - username
    Metallicity:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error:
          type: number
          format: double
          nullable: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    Mirror:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        mirror_index:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        diameter:
          type: number
          format: double
          nullable: true
        thickness:
          type: number
          format: double
          nullable: true
        coating:
          type: string
          maxLength: 100
        central_obscuration:
          type: number
          format: double
          nullable: true
        material:
          type: string
          maxLength: 100
        telescope:
          type: string
          format: uuid
          nullable: true
      required:
      - pk
    MorphologicalType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          maxLength: 500
        quality:
          type: string
          maxLength: 10
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - id
      - value
    MountingEnum:
      enum:
      - unk
      - equ
      - cas
      - aaz
      - 'off'
      type: string
    NightLog:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        profile:
          type: string
          readOnly: true
        date:
          type: string
          format: date
        journal:
          type: string
        average_overhead:
          type: integer
        observing_run:
          type: string
          format: uuid
        telescope:
          type: string
          format: uuid
        observations:
          type: array
          items:
            type: string
            format: uuid
        calibrations:
          type: array
          items:
            type: string
            format: uuid
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
      required:
      - date
      - profile
      - uuid
    NullEnum:
      enum:
      - null
    Observation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        notes:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        start:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
        night_log:
          type: string
          format: uuid
        data_file:
          type: integer
          nullable: true
        target_name:
          type: string
        target_coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        target_class:
          $ref: '#/components/schemas/TargetClass631Enum'
      required:
      - index
      - night_log
      - uuid
    ObservedTarget:
      type: object
      properties:
        name:
          type: string
        observation_count:
          type: integer
        night_log_count:
          type: integer
        total_duration:
          type: integer
      required:
      - name
      - night_log_count
      - observation_count
      - total_duration
    ObservingModeEnum:
      enum:
      - (Undefined)
      - Visitor
      - Service
      type: string
    ObservingRun:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        profile:
          type: string
        observing_site:
          type: string
          format: uuid
        night_logs:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        journal:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
      required:
      - night_logs
      - uuid
    ObservingSiteImagesList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date:
          type: string
          format: date-time
        file:
          type: string
          format: uri
          nullable: true
        observing_site:
          type: string
          format: uuid
        observing_site_name:
          type: string
          readOnly: true
        uploader:
          type: string
        credits:
          type: string
          maxLength: 200
        credits_url:
          type: string
          format: uri
          maxLength: 1000
        thumbnail_small:
          type: string
          readOnly: true
        thumbnail_medium:
          type: string
          readOnly: true
        thumbnail_large:
          type: string
          readOnly: true
      required:
      - observing_site_name
      - pk
      - thumbnail_large
      - thumbnail_medium
      - thumbnail_small
    ObservingSiteListCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        nickname:
          type: string
        alternate_names:
          type: string
        IAUCode:
          type: string
        acronym:
          type: string
        homepage_url:
          type: string
          format: uri
          maxLength: 300
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        address:
          $ref: '#/components/schemas/Address'
        telescopes:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ObservingSiteImagesList'
          readOnly: true
      required:
      - coordinates
      - images
      - name
      - telescopes
      - uuid
    ObservingSiteUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        telescopes:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        name:
          type: string
        nickname:
          type: string
        alternate_names:
          type: string
        IAUCode:
          type: string
        acronym:
          type: string
        homepage_url:
          type: string
          format: uri
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        address:
          $ref: '#/components/schemas/Address'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ObservingSiteImagesList'
      required:
      - telescopes
      - uuid
    ObservingSiteUpdateList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date:
          type: string
          format: date-time
        profile:
          type: string
          readOnly: true
        observing_site:
          allOf:
          - $ref: '#/components/schemas/ObservingSiteListCreate'
          readOnly: true
        action:
          type: string
          readOnly: true
        property_name:
          type: string
          maxLength: 200
        old_value:
          type: string
          maxLength: 2000
        new_value:
          type: string
          maxLength: 2000
        action_message:
          type: string
          maxLength: 1000
        method:
          type: string
          readOnly: true
      required:
      - action
      - date
      - method
      - observing_site
      - pk
      - profile
    OpticalDesignEnum:
      enum:
      - unk
      - rc
      - sc
      type: string
    OrbitalPeriod:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    OrgTypeEnum:
      enum:
      - Unknown
      - Public
      - Private
      - Mixed
      type: string
    OrganisationCCD:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1000
        physical_pixel_number_x:
          type: integer
          maximum: 32767
          minimum: 0
        physical_pixel_number_y:
          type: integer
          maximum: 32767
          minimum: 0
        physical_pixel_size_x:
          type: integer
          maximum: 32767
          minimum: 0
        physical_pixel_size_y:
          type: integer
          maximum: 32767
          minimum: 0
        instrument:
          type: string
          format: uuid
          nullable: true
      required:
      - id
    OrganisationCalibration:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
          maximum: 32767
          minimum: 0
        name:
          type: string
          maxLength: 200
        notes:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        start:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
        night_log:
          type: string
          format: uuid
          nullable: true
        data_file:
          $ref: '#/components/schemas/DataFile'
        instrument_configuration:
          $ref: '#/components/schemas/InstrumentConfiguration'
        detector_configuration:
          $ref: '#/components/schemas/CCDConfiguration'
        type:
          oneOf:
          - $ref: '#/components/schemas/Type8f9Enum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - data_file
      - detector_configuration
      - instrument_configuration
      - uuid
    OrganisationDataFile:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        is_fits:
          type: boolean
          readOnly: true
        is_xisf:
          type: boolean
          readOnly: true
        size:
          type: integer
          readOnly: true
        target_name:
          type: string
        dataset:
          type: string
          format: uuid
        file:
          type: string
          format: uri
        hdus:
          type: array
          items:
            $ref: '#/components/schemas/HDU'
          readOnly: true
        header:
          type: string
          readOnly: true
        data_blocks:
          type: array
          items:
            $ref: '#/components/schemas/DataBlock'
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        tags:
          type: array
          items:
            type: string
      required:
      - data_blocks
      - dataset
      - file
      - hdus
      - header
      - is_fits
      - is_xisf
      - pk
      - size
    OrganisationDataPackage:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        cover_image:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        zip_file_url:
          type: string
          readOnly: true
        organisation:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        datasets:
          type: array
          items:
            type: string
            format: uuid
        datasets_count:
          type: integer
          readOnly: true
        data_files_count:
          type: integer
          readOnly: true
        data_files_volume:
          type: integer
          readOnly: true
      required:
      - creation_date
      - data_files_count
      - data_files_volume
      - datasets_count
      - last_update
      - organisation
      - uuid
      - zip_file_url
    OrganisationDataset:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        observation:
          type: string
          format: uuid
        calibration:
          type: string
          format: uuid
        organisation:
          type: string
        data_files:
          type: array
          items:
            type: integer
          readOnly: true
        data_files_count:
          type: integer
          readOnly: true
        data_files_volume:
          type: integer
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
      required:
      - creation_date
      - data_files
      - data_files_count
      - data_files_volume
      - last_update
      - organisation
      - uuid
    OrganisationDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 1000
        institute_name_1:
          type: string
          maxLength: 1000
        institute_name_2:
          type: string
          maxLength: 1000
        acronym:
          type: string
          maxLength: 100
        date_created:
          type: string
          format: date
          readOnly: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        org_type:
          $ref: '#/components/schemas/OrgTypeEnum'
        subdomain:
          type: string
          maxLength: 50
        icon:
          type: string
          format: uri
          nullable: true
        banner:
          type: string
          format: uri
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        observing_sites:
          type: array
          items:
            type: string
            format: uuid
        telescopes:
          type: array
          items:
            type: string
            format: uuid
        telescope_activations:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationTelescopeActivation'
          readOnly: true
      required:
      - date_created
      - pk
      - telescope_activations
    OrganisationInstrument:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 1000
        acronym:
          type: string
          maxLength: 20
        archive_key:
          type: string
          maxLength: 20
        focus:
          type: string
          maxLength: 50
        telescope:
          type: string
          format: uuid
          nullable: true
        interferometer:
          type: string
          format: uuid
          nullable: true
        satellite:
          type: string
          format: uuid
          nullable: true
        archive:
          type: integer
          nullable: true
      required:
      - uuid
    OrganisationInvitationCreate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        inviter:
          type: string
        invitee:
          type: string
        invitee_email:
          type: string
          format: email
        token:
          type: string
          readOnly: true
        emails_sent:
          type: integer
        message:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_accepted:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: string
          readOnly: true
        status:
          type: string
        organisation:
          type: string
      required:
      - date_accepted
      - date_created
      - duration
      - organisation
      - pk
      - token
    OrganisationInvitationUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        inviter:
          type: string
        invitee:
          type: string
        invitee_email:
          type: string
          format: email
        token:
          type: string
          readOnly: true
        emails_sent:
          type: integer
        message:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_accepted:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: string
          readOnly: true
        status:
          type: string
        organisation:
          type: string
          readOnly: true
      required:
      - date_accepted
      - date_created
      - duration
      - organisation
      - pk
      - token
    OrganisationList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 1000
        institute_name_1:
          type: string
          maxLength: 1000
        institute_name_2:
          type: string
          maxLength: 1000
        acronym:
          type: string
          maxLength: 100
        date_created:
          type: string
          format: date
          readOnly: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        org_type:
          $ref: '#/components/schemas/OrgTypeEnum'
        subdomain:
          type: string
          maxLength: 50
        icon:
          type: string
          format: uri
          nullable: true
        banner:
          type: string
          format: uri
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        observing_sites:
          type: array
          items:
            type: string
            format: uuid
        telescopes:
          type: array
          items:
            type: string
            format: uuid
        telescope_activations:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationTelescopeActivation'
          readOnly: true
      required:
      - date_created
      - pk
      - telescope_activations
    OrganisationNightLog:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        date:
          type: string
          format: date
        journal:
          type: string
        telescope:
          type: string
          format: uuid
        observations:
          type: array
          items:
            type: string
            format: uuid
        calibrations:
          type: array
          items:
            type: string
            format: uuid
        organisation:
          type: string
      required:
      - organisation
      - uuid
    OrganisationObservation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
          maximum: 32767
          minimum: 0
        name:
          type: string
          maxLength: 200
        notes:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        start:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
        night_log:
          type: string
          format: uuid
          nullable: true
        data_file:
          $ref: '#/components/schemas/DataFile'
        instrument_configuration:
          $ref: '#/components/schemas/InstrumentConfiguration'
        detector_configuration:
          $ref: '#/components/schemas/CCDConfiguration'
        target_name:
          type: string
          maxLength: 200
        target_coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        target_class:
          $ref: '#/components/schemas/TargetClass631Enum'
      required:
      - data_file
      - detector_configuration
      - instrument_configuration
      - target_coordinates
      - target_name
      - uuid
    OrganisationScheduleEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        all_day:
          type: boolean
          nullable: true
        beginning:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          maxLength: 100
        content:
          type: string
        organisation:
          type: integer
        creator:
          type: integer
          nullable: true
        observing_site:
          type: array
          items:
            type: string
            format: uuid
        telescope:
          type: array
          items:
            type: string
            format: uuid
      required:
      - creation_date
      - id
      - last_update
      - observing_site
      - organisation
      - telescope
    OrganisationScheduleEventReminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
        background_task_id:
          type: string
          maxLength: 100
        event:
          type: integer
        notified:
          type: array
          items:
            type: integer
      required:
      - event
      - id
      - notified
    OrganisationStats:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organisation:
          type: string
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        count_observing_sites:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_telescopes:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_instruments:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_observing_runs:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_night_logs:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_observations:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_total_files:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_data_packages:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_datasets:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_data_files:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_fits_files:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_xisf_files:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_fits_hdu_previews:
          type: integer
          maximum: 2147483647
          minimum: 0
        count_xisf_block_previews:
          type: integer
          maximum: 2147483647
          minimum: 0
        data_size_total_files:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        data_size_data_packages:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        data_size_datasets:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        data_size_data_files:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        data_size_fits_files:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        data_size_xisf_files:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        data_size_fits_hdu_previews:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        data_size_xisf_block_previews:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        count_members:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - creation_date
      - id
      - organisation
    OrganisationTelescopeActivation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organisation:
          type: string
        telescope:
          type: string
          format: uuid
        date_started:
          type: string
          format: date
        date_ended:
          type: string
          format: date
        is_data_storage_activated:
          type: boolean
      required:
      - id
      - organisation
      - telescope
    OrganisationTelescopeCreateUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        acronym:
          type: string
        alias:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        observing_site:
          type: string
          format: uuid
        instruments:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        dome:
          type: integer
        mirrors:
          type: array
          items:
            type: integer
        horizon_masks:
          type: array
          items:
            type: integer
        mounting:
          $ref: '#/components/schemas/MountingEnum'
        optical_design:
          $ref: '#/components/schemas/OpticalDesignEnum'
        has_active_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_adaptative_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_laser_guide_star:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        is_relocatable:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        images:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationTelescopeImageList'
          readOnly: true
        ownership_mode:
          type: string
          nullable: true
      required:
      - images
      - instruments
      - name
      - observing_site
      - ownership_mode
      - uuid
    OrganisationTelescopeImageList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date:
          type: string
          format: date-time
        file:
          type: string
          format: uri
          nullable: true
        telescope:
          type: string
          format: uuid
        uploader:
          type: string
      required:
      - pk
    OrganisationTelescopeListRetrieve:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        acronym:
          type: string
        alias:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        observing_site:
          type: string
          format: uuid
        instruments:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        dome:
          type: integer
        mirrors:
          type: array
          items:
            type: integer
        horizon_masks:
          type: array
          items:
            type: integer
        mounting:
          $ref: '#/components/schemas/MountingEnum'
        optical_design:
          $ref: '#/components/schemas/OpticalDesignEnum'
        has_active_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_adaptative_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_laser_guide_star:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        is_relocatable:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        images:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationTelescopeImageList'
          readOnly: true
        ownerships:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationTelescopeOwnership'
      required:
      - images
      - instruments
      - name
      - observing_site
      - ownerships
      - uuid
    OrganisationTelescopeOwnership:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        telescope:
          type: string
          format: uuid
        organisation:
          type: string
        date_joined:
          type: string
          format: date
          readOnly: true
        mode:
          type: string
      required:
      - date_joined
      - mode
      - organisation
      - pk
    OrganisationUploadKey:
      type: object
      properties:
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        key:
          type: string
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - creation_date
      - email
      - first_name
      - key
      - last_name
      - username
    PaginatedActivityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    PaginatedAppStatsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppStats'
    PaginatedCatalogueRowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CatalogueRow'
    PaginatedESOArchiveDataRowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ESOArchiveDataRow'
    PaginatedExoplanetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Exoplanet'
    PaginatedGeminiArchiveDataRowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GeminiArchiveDataRow'
    PaginatedObservingSiteListCreateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObservingSiteListCreate'
    PaginatedObservingSiteUpdateListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObservingSiteUpdateList'
    PaginatedOrganisationDataFileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationDataFile'
    PaginatedOrganisationDataPackageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationDataPackage'
    PaginatedPublicationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
    PaginatedSatelliteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Satellite'
    PaginatedTelescopeListCreateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TelescopeListCreate'
    PaginatedTelescopeUpdateListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TelescopeUpdateList'
    PaginatedUserProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    Parallax:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: number
          format: double
          nullable: true
        precision:
          type: number
          format: double
          nullable: true
        error:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          maxLength: 10
        quality:
          type: string
          maxLength: 10
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - id
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedActivity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date-time
        links:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLink'
        title:
          type: string
          default: ''
        content:
          type: string
          nullable: true
          default: ''
        label:
          type: string
          default: ''
        profile:
          type: string
        satellite:
          type: string
        observing_site:
          type: string
          format: uuid
          nullable: true
        telescope:
          type: string
          format: uuid
          nullable: true
        instrument:
          type: string
          format: uuid
          nullable: true
        programme:
          $ref: '#/components/schemas/Programme'
        programme_type:
          type: string
        target_name:
          type: string
        coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        organisation:
          type: string
        collaboration:
          type: integer
          nullable: true
    PatchedActivitySubscriptionUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        owner:
          type: string
        is_active:
          type: boolean
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        emails_sent:
          type: integer
          readOnly: true
        profile:
          type: string
        person:
          type: integer
        name:
          type: string
        programme:
          type: string
        observing_site:
          type: string
          format: uuid
        telescope:
          type: string
          format: uuid
        instrument:
          type: string
          format: uuid
        satellite:
          type: string
        target:
          $ref: '#/components/schemas/AstronomicalObject'
        coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        organisation:
          type: integer
        collaboration:
          type: integer
    PatchedAstronomersTelegramPrivateUpdate:
      type: object
      properties:
        identifier:
          type: string
        raw_html_page:
          type: string
    PatchedCalibration:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        notes:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        start:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
        night_log:
          type: string
          format: uuid
        data_file:
          type: integer
          nullable: true
        type:
          oneOf:
          - $ref: '#/components/schemas/Type8f9Enum'
          - $ref: '#/components/schemas/BlankEnum'
    PatchedCollaborationInvitationUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        inviter:
          type: string
        invitee:
          type: string
        invitee_email:
          type: string
          format: email
        token:
          type: string
          readOnly: true
        emails_sent:
          type: integer
        message:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_accepted:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: string
          readOnly: true
        status:
          type: string
        collaboration:
          type: integer
        collaboration_name:
          type: string
    PatchedCollaborationUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        description:
          type: string
        website_url:
          type: string
          format: uri
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/CollaborationInvitationUpdate'
          readOnly: true
    PatchedDJSubscriptions:
      type: object
      properties:
        djstripe_id:
          type: integer
          readOnly: true
          title: ID
        plan:
          allOf:
          - $ref: '#/components/schemas/DJSubscriptionPlan'
          readOnly: true
        price:
          allOf:
          - $ref: '#/components/schemas/DJSubscriptionPrice'
          readOnly: true
        can_reactivate:
          type: boolean
          readOnly: true
        djstripe_created:
          type: string
          format: date-time
          readOnly: true
        djstripe_updated:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          maxLength: 255
        livemode:
          type: boolean
          nullable: true
          description: Null here indicates that the livemode status is unknown or
            was previously unrecorded. Otherwise, this field indicates whether this
            record comes from Stripe test mode or live mode operation.
        created:
          type: string
          format: date-time
          nullable: true
          description: The datetime this object was created in stripe.
        metadata:
          type: string
          nullable: true
          description: A set of key/value pairs that you can attach to an object.
            It can be useful for storing additional information about an object in
            a structured format.
        description:
          type: string
          nullable: true
          description: A description of this object.
        application_fee_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: A positive decimal that represents the fee percentage of the
            subscription invoice amount that will be transferred to the application
            owner's Stripe account each billing period.
        billing_cycle_anchor:
          type: string
          format: date-time
          nullable: true
          description: Determines the date of the first full invoice, and, for plans
            with `month` or `year` intervals, the day of the month for subsequent
            invoices.
        billing_thresholds:
          type: string
          nullable: true
          description: Define thresholds at which an invoice will be sent, and the
            subscription advanced to a new billing period.
        cancel_at:
          type: string
          format: date-time
          nullable: true
          description: A date in the future at which the subscription will automatically
            get canceled.
        cancel_at_period_end:
          type: boolean
          description: If the subscription has been canceled with the ``at_period_end``
            flag set to true, ``cancel_at_period_end`` on the subscription will be
            true. You can use this attribute to determine whether a subscription that
            has a status of active is scheduled to be canceled at the end of the current
            period.
        canceled_at:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has been canceled, the date of that cancellation.
            If the subscription was canceled with ``cancel_at_period_end``, canceled_at
            will still reflect the date of the initial cancellation request, not the
            end of the subscription period when the subscription is automatically
            moved to a canceled state.
        collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethodEnum'
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Stripe will attempt to pay this subscription at the end
            of the cycle using the default source attached to the customer. When sending
            an invoice, Stripe will email your customer an invoice with payment instructions.
        current_period_end:
          type: string
          format: date-time
          description: End of the current period for which the subscription has been
            invoiced. At the end of this period, a new invoice will be created.
        current_period_start:
          type: string
          format: date-time
          description: Start of the current period for which the subscription has
            been invoiced.
        days_until_due:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Number of days a customer has to pay invoices generated by
            this subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
        discount:
          type: string
          nullable: true
          description: Describes the current discount applied to this subscription,
            if there is one. When billing, a discount applied to a subscription overrides
            a discount applied on a customer-wide basis.
        ended_at:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has ended (either because it was canceled
            or because the customer was switched to a subscription to a new plan),
            the date the subscription ended.
        next_pending_invoice_item_invoice:
          type: string
          format: date-time
          nullable: true
          description: Specifies the approximate timestamp on which any pending invoice
            items will be billed according to the schedule provided at pending_invoice_item_interval.
        pause_collection:
          type: string
          nullable: true
          description: If specified, payment collection for this subscription will
            be paused.
        pending_invoice_item_interval:
          type: string
          nullable: true
          description: Specifies an interval for how often to bill for any pending
            invoice items. It is analogous to calling Create an invoice for the given
            subscription at the specified interval.
        pending_update:
          type: string
          nullable: true
          description: If specified, pending updates that will be applied to the subscription
            once the latest_invoice has been paid.
        proration_behavior:
          description: Determines how to handle prorations when the billing cycle
            changes (e.g., when switching plans, resetting billing_cycle_anchor=now,
            or starting a trial), or if an item’s quantity changes
          oneOf:
          - $ref: '#/components/schemas/ProrationBehaviorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        proration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, the proration will be calculated as though the subscription
            was updated at the given time. This can be used to apply exactly the same
            proration that was previewed with upcoming invoice endpoint. It can also
            be used to implement custom proration logic, such as prorating by day
            instead of by second, by providing the time that you wish to use for proration
            calculations
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The quantity applied to this subscription. This value will
            be `null` for multi-plan subscriptions
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Date when the subscription was first created. The date might
            differ from the created date due to backdating.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: The status of this subscription.
        trial_end:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has a trial, the end of that trial.
        trial_start:
          type: string
          format: date-time
          nullable: true
          description: If the subscription has a trial, the beginning of that trial.
        djstripe_owner_account:
          type: integer
          title: ID
          nullable: true
          description: The Stripe Account this object belongs to.
        customer:
          type: integer
          title: ID
          description: The customer associated with this subscription.
        default_payment_method:
          type: integer
          title: ID
          nullable: true
          description: The default payment method for the subscription. It must belong
            to the customer associated with the subscription. If not set, invoices
            will use the default payment method in the customer's invoice settings.
        default_source:
          type: string
          nullable: true
          description: The default payment source for the subscription. It must belong
            to the customer associated with the subscription and be in a chargeable
            state. If not set, defaults to the customer's default source.
        latest_invoice:
          type: integer
          title: ID
          nullable: true
          description: The most recent invoice this subscription has generated.
        pending_setup_intent:
          type: integer
          title: ID
          nullable: true
          description: We can use this SetupIntent to collect user authentication
            when creating a subscription without immediate payment or updating a subscription's
            payment method, allowing you to optimize for off-session payments.
        schedule:
          type: integer
          title: ID
          nullable: true
          description: The schedule associated with this subscription.
        default_tax_rates:
          type: array
          items:
            type: integer
            title: ID
          description: The tax rates that will apply to any subscription item that
            does not have tax_rates set. Invoices created will have their default_tax_rates
            populated from the subscription.
    PatchedDataFile:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        is_fits:
          type: boolean
          readOnly: true
        is_xisf:
          type: boolean
          readOnly: true
        size:
          type: integer
          readOnly: true
        target_name:
          type: string
        dataset:
          type: string
          format: uuid
        file:
          type: string
          format: uri
        hdus:
          type: array
          items:
            $ref: '#/components/schemas/HDU'
          readOnly: true
        header:
          type: string
          readOnly: true
        data_blocks:
          type: array
          items:
            $ref: '#/components/schemas/DataBlock'
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        tags:
          type: array
          items:
            type: string
    PatchedDataPackage:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        profile:
          type: string
        datasets:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        cover_image:
          type: string
          format: uri
          nullable: true
        zip_file:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        organisation:
          type: integer
          nullable: true
        collaborations:
          type: array
          items:
            type: integer
        partner_organisations:
          type: array
          items:
            type: integer
    PatchedDataStorage:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        country:
          type: string
          maxLength: 200
        region:
          type: string
          maxLength: 200
        description:
          type: string
        is_read_only:
          type: boolean
        type:
          $ref: '#/components/schemas/DataStorageTypeEnum'
        cost_model:
          $ref: '#/components/schemas/CostModelEnum'
        credentials:
          type: string
          maxLength: 2000
        role:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
    PatchedDataset:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        direct_night_log:
          type: string
          format: uuid
          nullable: true
        observation:
          type: string
          format: uuid
        calibration:
          type: string
          format: uuid
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        data_files:
          type: array
          items:
            type: integer
          readOnly: true
        data_files_count:
          type: integer
          readOnly: true
        data_files_volume:
          type: integer
          readOnly: true
        storage:
          type: string
          format: uuid
          nullable: true
    PatchedEmailAddress:
      type: object
      properties:
        email:
          type: string
          format: email
        verified:
          type: boolean
          default: false
        primary:
          type: boolean
          default: false
    PatchedInstrument:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        archive:
          allOf:
          - $ref: '#/components/schemas/DataArchive'
          readOnly: true
        name:
          type: string
          maxLength: 1000
        acronym:
          type: string
          maxLength: 20
        archive_key:
          type: string
          maxLength: 20
        focus:
          type: string
          maxLength: 50
        telescope:
          type: string
          format: uuid
          nullable: true
        interferometer:
          type: string
          format: uuid
          nullable: true
        satellite:
          type: string
          format: uuid
          nullable: true
    PatchedInterferometer:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/InterferometerConfiguration'
        name:
          type: string
          maxLength: 1000
        observing_site:
          type: string
          format: uuid
          nullable: true
    PatchedMembershipList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_joined:
          type: string
          format: date
          readOnly: true
        role:
          type: string
        organisation:
          allOf:
          - $ref: '#/components/schemas/OrganisationList'
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        username:
          type: string
        title:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        avatar:
          type: string
          format: uri
          readOnly: true
        is_payer:
          type: boolean
          readOnly: true
    PatchedMirror:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        mirror_index:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        diameter:
          type: number
          format: double
          nullable: true
        thickness:
          type: number
          format: double
          nullable: true
        coating:
          type: string
          maxLength: 100
        central_obscuration:
          type: number
          format: double
          nullable: true
        material:
          type: string
          maxLength: 100
        telescope:
          type: string
          format: uuid
          nullable: true
    PatchedNightLog:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        profile:
          type: string
          readOnly: true
        date:
          type: string
          format: date
        journal:
          type: string
        average_overhead:
          type: integer
        observing_run:
          type: string
          format: uuid
        telescope:
          type: string
          format: uuid
        observations:
          type: array
          items:
            type: string
            format: uuid
        calibrations:
          type: array
          items:
            type: string
            format: uuid
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
    PatchedObservation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        notes:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        start:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
        night_log:
          type: string
          format: uuid
        data_file:
          type: integer
          nullable: true
        target_name:
          type: string
        target_coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        target_class:
          $ref: '#/components/schemas/TargetClass631Enum'
    PatchedObservingRun:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        profile:
          type: string
        observing_site:
          type: string
          format: uuid
        night_logs:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        journal:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
    PatchedObservingSiteListCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        nickname:
          type: string
        alternate_names:
          type: string
        IAUCode:
          type: string
        acronym:
          type: string
        homepage_url:
          type: string
          format: uri
          maxLength: 300
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        address:
          $ref: '#/components/schemas/Address'
        telescopes:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ObservingSiteImagesList'
          readOnly: true
    PatchedObservingSiteUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        telescopes:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        name:
          type: string
        nickname:
          type: string
        alternate_names:
          type: string
        IAUCode:
          type: string
        acronym:
          type: string
        homepage_url:
          type: string
          format: uri
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        address:
          $ref: '#/components/schemas/Address'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ObservingSiteImagesList'
    PatchedOrganisationCCD:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1000
        physical_pixel_number_x:
          type: integer
          maximum: 32767
          minimum: 0
        physical_pixel_number_y:
          type: integer
          maximum: 32767
          minimum: 0
        physical_pixel_size_x:
          type: integer
          maximum: 32767
          minimum: 0
        physical_pixel_size_y:
          type: integer
          maximum: 32767
          minimum: 0
        instrument:
          type: string
          format: uuid
          nullable: true
    PatchedOrganisationDataFile:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
        is_fits:
          type: boolean
          readOnly: true
        is_xisf:
          type: boolean
          readOnly: true
        size:
          type: integer
          readOnly: true
        target_name:
          type: string
        dataset:
          type: string
          format: uuid
        file:
          type: string
          format: uri
        hdus:
          type: array
          items:
            $ref: '#/components/schemas/HDU'
          readOnly: true
        header:
          type: string
          readOnly: true
        data_blocks:
          type: array
          items:
            $ref: '#/components/schemas/DataBlock'
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        tags:
          type: array
          items:
            type: string
    PatchedOrganisationDataPackage:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        cover_image:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        zip_file_url:
          type: string
          readOnly: true
        organisation:
          type: string
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
        datasets:
          type: array
          items:
            type: string
            format: uuid
        datasets_count:
          type: integer
          readOnly: true
        data_files_count:
          type: integer
          readOnly: true
        data_files_volume:
          type: integer
          readOnly: true
    PatchedOrganisationDataset:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        is_public:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        observation:
          type: string
          format: uuid
        calibration:
          type: string
          format: uuid
        organisation:
          type: string
        data_files:
          type: array
          items:
            type: integer
          readOnly: true
        data_files_count:
          type: integer
          readOnly: true
        data_files_volume:
          type: integer
          readOnly: true
        tag_array:
          type: array
          items:
            type: string
            maxLength: 1000
    PatchedOrganisationDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 1000
        institute_name_1:
          type: string
          maxLength: 1000
        institute_name_2:
          type: string
          maxLength: 1000
        acronym:
          type: string
          maxLength: 100
        date_created:
          type: string
          format: date
          readOnly: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        org_type:
          $ref: '#/components/schemas/OrgTypeEnum'
        subdomain:
          type: string
          maxLength: 50
        icon:
          type: string
          format: uri
          nullable: true
        banner:
          type: string
          format: uri
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        observing_sites:
          type: array
          items:
            type: string
            format: uuid
        telescopes:
          type: array
          items:
            type: string
            format: uuid
        telescope_activations:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationTelescopeActivation'
          readOnly: true
    PatchedOrganisationInstrument:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 1000
        acronym:
          type: string
          maxLength: 20
        archive_key:
          type: string
          maxLength: 20
        focus:
          type: string
          maxLength: 50
        telescope:
          type: string
          format: uuid
          nullable: true
        interferometer:
          type: string
          format: uuid
          nullable: true
        satellite:
          type: string
          format: uuid
          nullable: true
        archive:
          type: integer
          nullable: true
    PatchedOrganisationInvitationUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        inviter:
          type: string
        invitee:
          type: string
        invitee_email:
          type: string
          format: email
        token:
          type: string
          readOnly: true
        emails_sent:
          type: integer
        message:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_accepted:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: string
          readOnly: true
        status:
          type: string
        organisation:
          type: string
          readOnly: true
    PatchedOrganisationNightLog:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        date:
          type: string
          format: date
        journal:
          type: string
        telescope:
          type: string
          format: uuid
        observations:
          type: array
          items:
            type: string
            format: uuid
        calibrations:
          type: array
          items:
            type: string
            format: uuid
        organisation:
          type: string
    PatchedOrganisationScheduleEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        all_day:
          type: boolean
          nullable: true
        beginning:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          maxLength: 100
        content:
          type: string
        organisation:
          type: integer
        creator:
          type: integer
          nullable: true
        observing_site:
          type: array
          items:
            type: string
            format: uuid
        telescope:
          type: array
          items:
            type: string
            format: uuid
    PatchedOrganisationScheduleEventReminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
        background_task_id:
          type: string
          maxLength: 100
        event:
          type: integer
        notified:
          type: array
          items:
            type: integer
    PatchedOrganisationTelescopeActivation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organisation:
          type: string
        telescope:
          type: string
          format: uuid
        date_started:
          type: string
          format: date
        date_ended:
          type: string
          format: date
        is_data_storage_activated:
          type: boolean
    PatchedOrganisationTelescopeCreateUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        acronym:
          type: string
        alias:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        observing_site:
          type: string
          format: uuid
        instruments:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        dome:
          type: integer
        mirrors:
          type: array
          items:
            type: integer
        horizon_masks:
          type: array
          items:
            type: integer
        mounting:
          $ref: '#/components/schemas/MountingEnum'
        optical_design:
          $ref: '#/components/schemas/OpticalDesignEnum'
        has_active_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_adaptative_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_laser_guide_star:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        is_relocatable:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        images:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationTelescopeImageList'
          readOnly: true
        ownership_mode:
          type: string
          nullable: true
    PatchedOrganisationTelescopeOwnership:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        telescope:
          type: string
          format: uuid
        organisation:
          type: string
        date_joined:
          type: string
          format: date
          readOnly: true
        mode:
          type: string
    PatchedTarget:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        object:
          type: string
        identifier:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 200
        type:
          type: string
          maxLength: 50
        mode:
          type: string
          maxLength: 50
        list_index:
          type: integer
        list:
          type: string
          format: uuid
          nullable: true
        equatorial_coordinates:
          allOf:
          - $ref: '#/components/schemas/AstronomicalCoordinates'
          nullable: true
        finding_charts:
          type: array
          items:
            $ref: '#/components/schemas/IPACFindingChart'
    PatchedTargetList:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 1000
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        profile:
          type: string
        organisation:
          type: string
        targets:
          type: array
          items:
            $ref: '#/components/schemas/Target'
        is_public:
          type: boolean
        last_update:
          type: string
          format: date-time
          readOnly: true
    PatchedTargetTreeNodeWithTree:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        name:
          type: string
        color:
          type: string
        notes:
          type: string
        is_folder:
          type: boolean
        is_open:
          type: boolean
        parent:
          type: integer
          nullable: true
        before:
          type: integer
          nullable: true
        after:
          type: integer
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/TargetTreeNode'
        index:
          type: integer
        target_id:
          type: string
        target_name:
          type: string
        target_mode:
          type: string
        target_coordinates:
          allOf:
          - $ref: '#/components/schemas/AstronomicalCoordinates'
          nullable: true
        target_class:
          oneOf:
          - $ref: '#/components/schemas/TargetClass816Enum'
          - $ref: '#/components/schemas/BlankEnum'
        tree:
          type: array
          items:
            $ref: '#/components/schemas/TargetTreeNode'
    PatchedTelescopeUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        acronym:
          type: string
        alias:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        observing_site:
          type: string
          format: uuid
        instruments:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        dome:
          $ref: '#/components/schemas/Dome'
        mirrors:
          type: array
          items:
            $ref: '#/components/schemas/Mirror'
        horizon_masks:
          type: array
          items:
            $ref: '#/components/schemas/HorizonMask'
        mounting:
          $ref: '#/components/schemas/MountingEnum'
        optical_design:
          $ref: '#/components/schemas/OpticalDesignEnum'
        has_active_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_adaptative_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_laser_guide_star:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        is_relocatable:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        images:
          type: array
          items:
            $ref: '#/components/schemas/TelescopeImageList'
          readOnly: true
    PatchedUserProfileAPIKey:
      type: object
      properties:
        api_key:
          type: string
          maxLength: 32
    PatchedUserProfileUploadKey:
      type: object
      properties:
        upload_key:
          type: string
          maxLength: 32
    PatchedVote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        difficulty:
          type: string
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        count:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        title:
          type: string
          maxLength: 100
        subtitle:
          type: string
          maxLength: 1000
        url:
          type: string
          format: uri
          maxLength: 1000
        category:
          $ref: '#/components/schemas/CategoryEnum'
        eta:
          type: string
          maxLength: 100
        price:
          type: string
          maxLength: 100
        type:
          type: string
          maxLength: 100
        distribution:
          type: string
          maxLength: 100
        session:
          type: integer
    Period:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        identifier:
          type: string
          maxLength: 40
        organisation:
          type: integer
        open_start_date:
          type: string
          format: date-time
        open_end_date:
          type: string
          format: date-time
        review_start_date:
          type: string
          format: date-time
        review_end_date:
          type: string
          format: date-time
        active_start_date:
          type: string
          format: date-time
        active_end_date:
          type: string
          format: date-time
        is_future:
          type: boolean
          readOnly: true
        is_open:
          type: boolean
          readOnly: true
        is_before_in_review:
          type: boolean
          readOnly: true
        is_in_review:
          type: boolean
          readOnly: true
        is_before_active:
          type: boolean
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        is_closed:
          type: boolean
          readOnly: true
        proposals_count:
          type: integer
          readOnly: true
      required:
      - is_active
      - is_before_active
      - is_before_in_review
      - is_closed
      - is_future
      - is_in_review
      - is_open
      - organisation
      - pk
      - proposals_count
    Person:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 1000
        middle_name:
          type: string
          maxLength: 1000
        initials:
          type: array
          items:
            type: string
            maxLength: 10
        last_name:
          type: string
          maxLength: 1000
      required:
      - url
    PersonShort:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 1000
        middle_name:
          type: string
          maxLength: 1000
        initials:
          type: array
          items:
            type: string
            maxLength: 10
        last_name:
          type: string
          maxLength: 1000
      required:
      - url
    Polarization:
      type: object
      properties:
        band_name:
          type: string
          maxLength: 100
        percentage:
          type: number
          format: double
          nullable: true
        percentage_error:
          type: number
          format: double
          nullable: true
        angle:
          type: number
          format: double
          nullable: true
        angle_error:
          type: number
          format: double
          nullable: true
      required:
      - band_name
    Programme:
      type: object
      properties:
        identifier:
          type: string
          maxLength: 20
        investigators_list:
          type: string
          maxLength: 1000
        investigators:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        title:
          type: string
          maxLength: 1000
        abstract:
          type: string
        abstract_url:
          type: string
          format: uri
          maxLength: 1000
        full_details_url:
          type: string
          readOnly: true
      required:
      - full_details_url
      - identifier
      - investigators
    ProgrammeTypeEnum:
      enum:
      - (Undefined)
      - Normal Programme
      - Guaranteed Time Observations
      - DirectorS Discretionary Time
      - Target of Opportunity
      - Large Programme
      - Short Programme
      - Calibration Programme
      - Monitoring Programme
      type: string
    ProperMotion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value_right_ascension:
          type: number
          format: double
          nullable: true
        value_declination:
          type: number
          format: double
          nullable: true
        precision_right_ascension:
          type: number
          format: double
          nullable: true
        precision_declination:
          type: number
          format: double
          nullable: true
        value_right_ascension_unit:
          type: string
          maxLength: 10
        value_declination_unit:
          type: string
          maxLength: 10
        error_major_axis:
          type: number
          format: double
          nullable: true
        error_minor_axis:
          type: number
          format: double
          nullable: true
        error_angle:
          type: number
          format: double
          nullable: true
        error_angle_unit:
          type: string
          maxLength: 10
        quality:
          type: string
          maxLength: 10
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - id
    ProrationBehaviorEnum:
      enum:
      - always_invoice
      - create_prorations
      - none
      type: string
    Publication:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
        title:
          type: string
          maxLength: 1000
        journal:
          type: string
          readOnly: true
        year:
          type: string
          maxLength: 10
        authors:
          type: string
          readOnly: true
      required:
      - authors
      - bibcode
      - journal
      - url
    PublicationFull:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
        eprint_id:
          type: string
          maxLength: 50
        doi:
          $ref: '#/components/schemas/Link'
        year:
          type: string
          maxLength: 10
        month:
          type: string
          maxLength: 10
        publication_date:
          type: string
          nullable: true
          maxLength: 25
        publication_type:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 1000
        abstract:
          type: string
        subjects:
          type: array
          items:
            type: string
            maxLength: 200
          nullable: true
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          nullable: true
        is_refereed:
          type: boolean
        authors:
          type: array
          items:
            $ref: '#/components/schemas/PersonShort'
          readOnly: true
        journal:
          $ref: '#/components/schemas/Publisher'
        volume_number:
          type: string
          maxLength: 20
        issue_number:
          type: string
          maxLength: 20
        first_page_number:
          type: string
          maxLength: 20
        number_of_pages:
          type: string
          maxLength: 20
        references:
          type: array
          items:
            type: string
          readOnly: true
        citations:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - authors
      - bibcode
      - citations
      - id
      - publication_type
      - references
    Publisher:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 1000
        acronym:
          type: string
          nullable: true
          maxLength: 20
    RadialVelocity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: number
          format: double
          nullable: true
        error:
          type: number
          format: double
          nullable: true
        type:
          type: string
          maxLength: 10
        unit:
          type: string
          maxLength: 10
        quality:
          type: string
          maxLength: 10
        wavelength:
          type: string
          maxLength: 10
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - id
    Radius:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
      - username
    Release:
      type: object
      properties:
        date:
          type: string
          format: date-time
        version:
          type: string
          maxLength: 20
        title:
          type: string
          maxLength: 200
        subtitle:
          type: string
        points:
          type: array
          items:
            $ref: '#/components/schemas/ReleasePoint'
          readOnly: true
      required:
      - date
      - points
      - title
      - version
    ReleasePoint:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        badge:
          oneOf:
          - $ref: '#/components/schemas/BadgeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        text:
          type: string
        idx:
          type: integer
          maximum: 2147483647
          minimum: 0
        release:
          type: integer
          nullable: true
      required:
      - id
      - text
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Satellite:
      type: object
      properties:
        name:
          type: string
          maxLength: 24
        acronym:
          type: string
          maxLength: 20
        norad_catalog_number:
          type: string
          maxLength: 10
        date_updated:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/SatelliteTypeEnum'
        elements:
          $ref: '#/components/schemas/TwoLineElements'
        line_1:
          type: string
          readOnly: true
        line_2:
          type: string
          readOnly: true
        two_lines:
          type: string
          readOnly: true
        full_element_set:
          type: string
          readOnly: true
      required:
      - date_updated
      - elements
      - full_element_set
      - line_1
      - line_2
      - two_lines
    SatelliteTypeEnum:
      enum:
      - unknown
      - station
      - weather
      - NOAA
      - GOES
      - earth resources
      - search and rescue
      - disaster monitoring
      - tracking data relay
      - ARGOS
      - Planet
      - Spire
      - Active Geosynchronous (GEO)
      - GEO Protected Zone
      - GEO Protected Zone Plus
      - Intelsat
      - SES
      - Iridium
      - Iridium NEXT
      - Starlink
      - OneWeb
      - Orbcomm
      - Globalstar
      - Amateur Radio
      - Experimental
      - Other Comm
      - Sat NGOS
      - Gorizont
      - Raduga
      - Molnyia
      - GPS Operational
      - GLONASS Operational
      - Galileo
      - Beidou
      - SBAS
      - NNSS
      - LEO
      - science
      - geodetic
      - engineering
      - education
      - military
      - cubesat
      - Radar Calibration
      - others
      type: string
    SmallBody:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        orbit:
          $ref: '#/components/schemas/SmallBodyOrbit'
        primary_designation:
          type: string
          maxLength: 100
        alternate_designations:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
        primary_spk_id:
          type: string
          maxLength: 50
        short_name:
          type: string
          maxLength: 100
        full_name:
          type: string
          maxLength: 1000
        neo_flag:
          type: boolean
          nullable: true
        pha_flag:
          type: boolean
          nullable: true
        orbit_class:
          type: object
          additionalProperties: {}
        orbit_solution_identifier:
          type: string
          maxLength: 100
        object_kind_code:
          type: string
          maxLength: 100
        prefix:
          type: string
          maxLength: 100
      required:
      - id
      - orbit
      - orbit_class
      - primary_designation
    SmallBodyEphemeris:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        small_body:
          type: string
          readOnly: true
        right_ascension:
          type: number
          format: double
          nullable: true
        declination:
          type: number
          format: double
          nullable: true
        epoch:
          type: number
          format: double
        date:
          type: string
          format: date-time
        total_magnitude:
          type: number
          format: double
        nuclear_magnitude:
          type: number
          format: double
      required:
      - id
      - nuclear_magnitude
      - small_body
      - total_magnitude
    SmallBodyOrbit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        elements:
          type: array
          items:
            $ref: '#/components/schemas/SmallBodyOrbitalElement'
        orbit_id:
          type: string
          maxLength: 20
        source:
          type: string
          maxLength: 20
        producer:
          type: string
          maxLength: 100
        covariance_epoch:
          type: string
          maxLength: 20
        minimum_orbital_intersection_distance_earth:
          type: number
          format: double
        minimum_orbital_intersection_distance_jupiter:
          type: number
          format: double
        tisserand_invariant_jupiter:
          type: number
          format: double
        orbit_condition_code:
          type: string
          maxLength: 100
        not_valid_before:
          type: string
          format: date-time
          nullable: true
        not_valid_after:
          type: string
          format: date-time
          nullable: true
        model_pars:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
        normalized_orbit_fit_rms:
          type: number
          format: double
        first_observation:
          type: string
          maxLength: 100
        last_observation:
          type: string
          maxLength: 100
        observation_total_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        radar_delay_observation_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        radar_doppler_observation_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        data_arc:
          type: integer
          maximum: 2147483647
          minimum: 0
        solution_date:
          type: string
          format: date-time
          nullable: true
        two_body_model:
          type: boolean
          nullable: true
        osculation_epoch:
          type: string
          maxLength: 100
        calendar_epoch:
          type: string
          maxLength: 100
        equinox:
          type: string
          maxLength: 100
        jpl_planetary_ephemeris_name:
          type: string
          maxLength: 100
        jpl_small_body_perturber_ephemeris_name:
          type: string
          maxLength: 100
        comment:
          type: string
      required:
      - data_arc
      - elements
      - id
      - observation_total_number
      - radar_delay_observation_number
      - radar_doppler_observation_number
    SmallBodyOrbitalElement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 1000
        label:
          type: string
          maxLength: 100
        units:
          type: string
          maxLength: 100
        value:
          type: number
          format: double
        sigma:
          type: number
          format: double
        orbit:
          type: integer
      required:
      - id
      - orbit
      - sigma
      - value
    SourceEnum:
      enum:
      - Simbad
      - NED
      type: string
    SpectralType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          maxLength: 500
        quality:
          type: string
          maxLength: 10
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - id
      - value
    StandardStar:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        astronomical_object:
          type: string
          format: uri
          readOnly: true
        equatorial_coordinates:
          $ref: '#/components/schemas/AstronomicalCoordinates'
        spectral_type:
          type: string
          readOnly: true
        magnitudes:
          type: array
          items:
            $ref: '#/components/schemas/Magnitude'
          readOnly: true
        colors:
          type: array
          items:
            $ref: '#/components/schemas/MagnitudeColor'
          readOnly: true
        polarizations:
          type: array
          items:
            $ref: '#/components/schemas/Polarization'
          readOnly: true
        catalogue_row:
          allOf:
          - $ref: '#/components/schemas/StandardStarCatalogueRow'
          readOnly: true
      required:
      - astronomical_object
      - catalogue_row
      - colors
      - equatorial_coordinates
      - magnitudes
      - name
      - polarizations
      - spectral_type
    StandardStarCatalogueRow:
      type: object
      properties:
        index:
          type: integer
          maximum: 32767
          minimum: 0
        table:
          allOf:
          - $ref: '#/components/schemas/StandardStarCatalogueTable'
          readOnly: true
      required:
      - index
      - table
    StandardStarCatalogueTable:
      type: object
      properties:
        index:
          type: integer
          maximum: 32767
          minimum: 0
        name:
          type: string
          maxLength: 100
        catalogue:
          type: integer
          readOnly: true
      required:
      - catalogue
      - index
      - name
    StatusEnum:
      enum:
      - active
      - canceled
      - incomplete
      - incomplete_expired
      - past_due
      - trialing
      - unpaid
      type: string
    Target:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        object:
          type: string
        identifier:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 200
        type:
          type: string
          maxLength: 50
        mode:
          type: string
          maxLength: 50
        list_index:
          type: integer
        list:
          type: string
          format: uuid
          nullable: true
        equatorial_coordinates:
          allOf:
          - $ref: '#/components/schemas/AstronomicalCoordinates'
          nullable: true
        finding_charts:
          type: array
          items:
            $ref: '#/components/schemas/IPACFindingChart'
      required:
      - pk
    TargetClass631Enum:
      enum:
      - AstronomicalObject
      - Exoplanet
      type: string
    TargetClass816Enum:
      enum:
      - AstronomicalObject
      - Exoplanet
      - StandardStar
      - SolarSystemPlanet
      - SmallBody
      - AsteroidOrComet
      - SolarSystem
      type: string
    TargetList:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 1000
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        profile:
          type: string
        organisation:
          type: string
        targets:
          type: array
          items:
            $ref: '#/components/schemas/Target'
        is_public:
          type: boolean
        last_update:
          type: string
          format: date-time
          readOnly: true
      required:
      - last_update
      - uuid
    TargetTreeNode:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        name:
          type: string
        color:
          type: string
        notes:
          type: string
        is_folder:
          type: boolean
        is_open:
          type: boolean
        parent:
          type: integer
          nullable: true
        before:
          type: integer
          nullable: true
        after:
          type: integer
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/TargetTreeNode'
        index:
          type: integer
        target_id:
          type: string
        target_name:
          type: string
        target_mode:
          type: string
        target_coordinates:
          allOf:
          - $ref: '#/components/schemas/AstronomicalCoordinates'
          nullable: true
        target_class:
          oneOf:
          - $ref: '#/components/schemas/TargetClass816Enum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - pk
    TargetTreeNodeWithTree:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        name:
          type: string
        color:
          type: string
        notes:
          type: string
        is_folder:
          type: boolean
        is_open:
          type: boolean
        parent:
          type: integer
          nullable: true
        before:
          type: integer
          nullable: true
        after:
          type: integer
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/TargetTreeNode'
        index:
          type: integer
        target_id:
          type: string
        target_name:
          type: string
        target_mode:
          type: string
        target_coordinates:
          allOf:
          - $ref: '#/components/schemas/AstronomicalCoordinates'
          nullable: true
        target_class:
          oneOf:
          - $ref: '#/components/schemas/TargetClass816Enum'
          - $ref: '#/components/schemas/BlankEnum'
        tree:
          type: array
          items:
            $ref: '#/components/schemas/TargetTreeNode'
      required:
      - pk
    TelescopeImageList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date:
          type: string
          format: date-time
        file:
          type: string
          format: uri
          nullable: true
        telescope:
          type: string
          format: uuid
        uploader:
          type: string
      required:
      - pk
    TelescopeIsRelocatableEnum:
      enum:
      - unknown
      - 'yes'
      - 'no'
      type: string
    TelescopeListCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        acronym:
          type: string
        alias:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        observing_site:
          type: string
          format: uuid
        instruments:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        dome:
          $ref: '#/components/schemas/Dome'
        mirrors:
          type: array
          items:
            $ref: '#/components/schemas/Mirror'
        horizon_masks:
          type: array
          items:
            $ref: '#/components/schemas/HorizonMask'
        mounting:
          $ref: '#/components/schemas/MountingEnum'
        optical_design:
          $ref: '#/components/schemas/OpticalDesignEnum'
        has_active_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_adaptative_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_laser_guide_star:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        is_relocatable:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        images:
          type: array
          items:
            $ref: '#/components/schemas/TelescopeImageList'
          readOnly: true
      required:
      - images
      - instruments
      - name
      - observing_site
      - uuid
    TelescopeStation:
      type: object
      properties:
        name:
          type: string
          maxLength: 1000
        telescopes:
          type: array
          items:
            type: string
            format: uuid
        horizon_masks:
          type: array
          items:
            $ref: '#/components/schemas/HorizonMask'
      required:
      - horizon_masks
    TelescopeUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        acronym:
          type: string
        alias:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        observing_site:
          type: string
          format: uuid
        instruments:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        dome:
          $ref: '#/components/schemas/Dome'
        mirrors:
          type: array
          items:
            $ref: '#/components/schemas/Mirror'
        horizon_masks:
          type: array
          items:
            $ref: '#/components/schemas/HorizonMask'
        mounting:
          $ref: '#/components/schemas/MountingEnum'
        optical_design:
          $ref: '#/components/schemas/OpticalDesignEnum'
        has_active_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_adaptative_optics:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        has_laser_guide_star:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        is_relocatable:
          $ref: '#/components/schemas/TelescopeIsRelocatableEnum'
        images:
          type: array
          items:
            $ref: '#/components/schemas/TelescopeImageList'
          readOnly: true
      required:
      - images
      - instruments
      - uuid
    TelescopeUpdateList:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date:
          type: string
          format: date-time
        profile:
          type: string
          readOnly: true
        telescope:
          allOf:
          - $ref: '#/components/schemas/TelescopeListCreate'
          readOnly: true
        action:
          type: string
          readOnly: true
        property_name:
          type: string
          maxLength: 200
        old_value:
          type: string
          maxLength: 2000
        new_value:
          type: string
          maxLength: 2000
        action_message:
          type: string
          maxLength: 1000
        method:
          type: string
          readOnly: true
      required:
      - action
      - date
      - method
      - pk
      - profile
      - telescope
    Temperature:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          readOnly: true
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
      required:
      - unit
    TiersModeEnum:
      enum:
      - graduated
      - volume
      type: string
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    TwoLineElements:
      type: object
      properties:
        satellite_number:
          type: string
          maxLength: 5
        classification:
          type: string
          maxLength: 1
        launch_year:
          type: string
          maxLength: 2
        launch_number_of_the_year:
          type: string
          maxLength: 3
        piece_of_the_launch:
          type: string
          maxLength: 3
        epoch_year:
          type: string
          maxLength: 3
        epoch:
          type: string
          maxLength: 12
          minLength: 12
        first_time_derivative_of_mean_motion:
          type: string
          maxLength: 10
        second_time_derivative_of_mean_motion:
          type: string
          maxLength: 8
        drag_term:
          type: string
          maxLength: 8
        ephemeris_type:
          type: string
          maxLength: 1
        element_number:
          type: string
          maxLength: 4
        inclination:
          type: string
          maxLength: 8
        right_ascension_of_ascending_node:
          type: string
          maxLength: 8
        eccentricity:
          type: string
          maxLength: 7
        argument_of_perigee:
          type: string
          maxLength: 8
        mean_anomaly:
          type: string
          maxLength: 8
        mean_motion:
          type: string
          maxLength: 11
        revolution_number_at_epoch:
          type: string
          maxLength: 5
        check_sum_line1:
          type: string
          maxLength: 1
        check_sum_line2:
          type: string
          maxLength: 1
    Type8f9Enum:
      enum:
      - Biases
      - Darks
      - Flats
      type: string
    UsageTypeEnum:
      enum:
      - licensed
      - metered
      type: string
    UserProfile:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        membership_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        is_staff:
          type: boolean
          readOnly: true
        has_wild_card:
          type: boolean
          readOnly: true
        avatar:
          type: string
          format: uri
          readOnly: true
        bio:
          type: string
          readOnly: true
        main_interests:
          type: string
          readOnly: true
        personal_website:
          type: string
          readOnly: true
        phd_university:
          type: string
          readOnly: true
        current_university:
          type: string
          readOnly: true
        origin_country:
          type: string
          readOnly: true
        home_country:
          type: string
          readOnly: true
        cameras:
          type: string
          readOnly: true
        visited_telescopes:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        visited_observing_sites:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
      required:
      - avatar
      - bio
      - cameras
      - current_university
      - first_name
      - has_wild_card
      - home_country
      - is_staff
      - last_name
      - last_update
      - main_interests
      - membership_date
      - origin_country
      - personal_website
      - phd_university
      - pk
      - title
      - username
      - visited_observing_sites
      - visited_telescopes
    UserProfileAPIKey:
      type: object
      properties:
        api_key:
          type: string
          maxLength: 32
    UserProfileOrganisationUploadKey:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        profile:
          type: string
          readOnly: true
        key:
          type: string
          readOnly: true
        organisation:
          type: string
        creation_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - creation_date
      - key
      - organisation
      - pk
      - profile
    UserProfileUploadKey:
      type: object
      properties:
        upload_key:
          type: string
          maxLength: 32
    Velocity:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          maxLength: 10
        error_max:
          type: number
          format: double
          nullable: true
        error_min:
          type: number
          format: double
          nullable: true
        bibcode:
          type: string
          pattern: '[0-9]{4}[A-Za-z&0-9\.]{15}'
          maxLength: 50
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    Vote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        difficulty:
          type: string
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        count:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        title:
          type: string
          maxLength: 100
        subtitle:
          type: string
          maxLength: 1000
        url:
          type: string
          format: uri
          maxLength: 1000
        category:
          $ref: '#/components/schemas/CategoryEnum'
        eta:
          type: string
          maxLength: 100
        price:
          type: string
          maxLength: 100
        type:
          type: string
          maxLength: 100
        distribution:
          type: string
          maxLength: 100
        session:
          type: integer
      required:
      - creation_date
      - difficulty
      - id
      - last_update
    VoteSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        votes:
          type: array
          items:
            $ref: '#/components/schemas/Vote'
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 5000
        content:
          type: string
          maxLength: 10000
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
      required:
      - end_date
      - id
      - start_date
      - votes
    VoteSessionComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        session:
          type: integer
        content:
          type: string
          maxLength: 5000
      required:
      - id
      - session
    WeatherCondition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
        comment:
          type: string
          maxLength: 1000
        icon:
          type: string
          maxLength: 20
        source:
          type: string
          maxLength: 100
        wind_direction:
          type: number
          format: double
          nullable: true
        wind_speed:
          type: number
          format: double
          nullable: true
        seeing:
          type: number
          format: double
          nullable: true
        relative_humidity:
          type: number
          format: double
          nullable: true
        temperature:
          type: number
          format: double
          nullable: true
        apparent_temperature:
          type: number
          format: double
          nullable: true
        dew_point:
          type: number
          format: double
          nullable: true
        precipitation_intensity:
          type: number
          format: double
          nullable: true
        precipitation_probability:
          type: number
          format: double
          nullable: true
        pressure:
          type: number
          format: double
          nullable: true
        cloud_cover:
          type: number
          format: double
          nullable: true
        uv_index:
          type: number
          format: double
          nullable: true
        visibility:
          type: number
          format: double
          nullable: true
        ozone:
          type: number
          format: double
          nullable: true
        observing_site:
          type: string
          format: uuid
      required:
      - date
      - id
      - observing_site
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
